// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: custom_action/custom_action.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_custom_5faction_2fcustom_5faction_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_custom_5faction_2fcustom_5faction_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_custom_5faction_2fcustom_5faction_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_custom_5faction_2fcustom_5faction_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_custom_5faction_2fcustom_5faction_2eproto;
namespace mavsdk {
namespace rpc {
namespace custom_action {
class ActionToExecute;
class ActionToExecuteDefaultTypeInternal;
extern ActionToExecuteDefaultTypeInternal _ActionToExecute_default_instance_;
class CustomActionResponse;
class CustomActionResponseDefaultTypeInternal;
extern CustomActionResponseDefaultTypeInternal _CustomActionResponse_default_instance_;
class CustomActionResult;
class CustomActionResultDefaultTypeInternal;
extern CustomActionResultDefaultTypeInternal _CustomActionResult_default_instance_;
class RespondCustomActionRequest;
class RespondCustomActionRequestDefaultTypeInternal;
extern RespondCustomActionRequestDefaultTypeInternal _RespondCustomActionRequest_default_instance_;
class SetCustomActionRequest;
class SetCustomActionRequestDefaultTypeInternal;
extern SetCustomActionRequestDefaultTypeInternal _SetCustomActionRequest_default_instance_;
class SetCustomActionResponse;
class SetCustomActionResponseDefaultTypeInternal;
extern SetCustomActionResponseDefaultTypeInternal _SetCustomActionResponse_default_instance_;
class SubscribeCustomActionRequest;
class SubscribeCustomActionRequestDefaultTypeInternal;
extern SubscribeCustomActionRequestDefaultTypeInternal _SubscribeCustomActionRequest_default_instance_;
class SubscribeCustomActionResponse;
class SubscribeCustomActionResponseDefaultTypeInternal;
extern SubscribeCustomActionResponseDefaultTypeInternal _SubscribeCustomActionResponse_default_instance_;
}  // namespace custom_action
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> ::mavsdk::rpc::custom_action::ActionToExecute* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionToExecute>(Arena*);
template<> ::mavsdk::rpc::custom_action::CustomActionResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResponse>(Arena*);
template<> ::mavsdk::rpc::custom_action::CustomActionResult* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(Arena*);
template<> ::mavsdk::rpc::custom_action::RespondCustomActionRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::RespondCustomActionRequest>(Arena*);
template<> ::mavsdk::rpc::custom_action::SetCustomActionRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::SetCustomActionRequest>(Arena*);
template<> ::mavsdk::rpc::custom_action::SetCustomActionResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::SetCustomActionResponse>(Arena*);
template<> ::mavsdk::rpc::custom_action::SubscribeCustomActionRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::SubscribeCustomActionRequest>(Arena*);
template<> ::mavsdk::rpc::custom_action::SubscribeCustomActionResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::SubscribeCustomActionResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mavsdk {
namespace rpc {
namespace custom_action {

enum CustomActionResult_Result : int {
  CustomActionResult_Result_RESULT_UNKNOWN = 0,
  CustomActionResult_Result_RESULT_SUCCESS = 1,
  CustomActionResult_Result_RESULT_ERROR = 2,
  CustomActionResult_Result_RESULT_TIMEOUT = 3,
  CustomActionResult_Result_RESULT_UNSUPPORTED = 4,
  CustomActionResult_Result_CustomActionResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CustomActionResult_Result_CustomActionResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CustomActionResult_Result_IsValid(int value);
constexpr CustomActionResult_Result CustomActionResult_Result_Result_MIN = CustomActionResult_Result_RESULT_UNKNOWN;
constexpr CustomActionResult_Result CustomActionResult_Result_Result_MAX = CustomActionResult_Result_RESULT_UNSUPPORTED;
constexpr int CustomActionResult_Result_Result_ARRAYSIZE = CustomActionResult_Result_Result_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CustomActionResult_Result_descriptor();
template<typename T>
inline const std::string& CustomActionResult_Result_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CustomActionResult_Result>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CustomActionResult_Result_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CustomActionResult_Result_descriptor(), enum_t_value);
}
inline bool CustomActionResult_Result_Parse(
    const std::string& name, CustomActionResult_Result* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CustomActionResult_Result>(
    CustomActionResult_Result_descriptor(), name, value);
}
// ===================================================================

class SetCustomActionRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.SetCustomActionRequest) */ {
 public:
  SetCustomActionRequest();
  virtual ~SetCustomActionRequest();

  SetCustomActionRequest(const SetCustomActionRequest& from);
  SetCustomActionRequest(SetCustomActionRequest&& from) noexcept
    : SetCustomActionRequest() {
    *this = ::std::move(from);
  }

  inline SetCustomActionRequest& operator=(const SetCustomActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetCustomActionRequest& operator=(SetCustomActionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetCustomActionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetCustomActionRequest* internal_default_instance() {
    return reinterpret_cast<const SetCustomActionRequest*>(
               &_SetCustomActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetCustomActionRequest& a, SetCustomActionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetCustomActionRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetCustomActionRequest* New() const final {
    return CreateMaybeMessage<SetCustomActionRequest>(nullptr);
  }

  SetCustomActionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetCustomActionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetCustomActionRequest& from);
  void MergeFrom(const SetCustomActionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCustomActionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.SetCustomActionRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_custom_5faction_2fcustom_5faction_2eproto);
    return ::descriptor_table_custom_5faction_2fcustom_5faction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.SetCustomActionRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class SetCustomActionResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.SetCustomActionResponse) */ {
 public:
  SetCustomActionResponse();
  virtual ~SetCustomActionResponse();

  SetCustomActionResponse(const SetCustomActionResponse& from);
  SetCustomActionResponse(SetCustomActionResponse&& from) noexcept
    : SetCustomActionResponse() {
    *this = ::std::move(from);
  }

  inline SetCustomActionResponse& operator=(const SetCustomActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetCustomActionResponse& operator=(SetCustomActionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetCustomActionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetCustomActionResponse* internal_default_instance() {
    return reinterpret_cast<const SetCustomActionResponse*>(
               &_SetCustomActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetCustomActionResponse& a, SetCustomActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetCustomActionResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetCustomActionResponse* New() const final {
    return CreateMaybeMessage<SetCustomActionResponse>(nullptr);
  }

  SetCustomActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetCustomActionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetCustomActionResponse& from);
  void MergeFrom(const SetCustomActionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCustomActionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.SetCustomActionResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_custom_5faction_2fcustom_5faction_2eproto);
    return ::descriptor_table_custom_5faction_2fcustom_5faction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomActionResultFieldNumber = 1,
  };
  // .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
  bool has_custom_action_result() const;
  private:
  bool _internal_has_custom_action_result() const;
  public:
  void clear_custom_action_result();
  const ::mavsdk::rpc::custom_action::CustomActionResult& custom_action_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* release_custom_action_result();
  ::mavsdk::rpc::custom_action::CustomActionResult* mutable_custom_action_result();
  void set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  private:
  const ::mavsdk::rpc::custom_action::CustomActionResult& _internal_custom_action_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* _internal_mutable_custom_action_result();
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.SetCustomActionResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class SubscribeCustomActionRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.SubscribeCustomActionRequest) */ {
 public:
  SubscribeCustomActionRequest();
  virtual ~SubscribeCustomActionRequest();

  SubscribeCustomActionRequest(const SubscribeCustomActionRequest& from);
  SubscribeCustomActionRequest(SubscribeCustomActionRequest&& from) noexcept
    : SubscribeCustomActionRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeCustomActionRequest& operator=(const SubscribeCustomActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeCustomActionRequest& operator=(SubscribeCustomActionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SubscribeCustomActionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeCustomActionRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeCustomActionRequest*>(
               &_SubscribeCustomActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SubscribeCustomActionRequest& a, SubscribeCustomActionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeCustomActionRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SubscribeCustomActionRequest* New() const final {
    return CreateMaybeMessage<SubscribeCustomActionRequest>(nullptr);
  }

  SubscribeCustomActionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeCustomActionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SubscribeCustomActionRequest& from);
  void MergeFrom(const SubscribeCustomActionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeCustomActionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.SubscribeCustomActionRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_custom_5faction_2fcustom_5faction_2eproto);
    return ::descriptor_table_custom_5faction_2fcustom_5faction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.SubscribeCustomActionRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class SubscribeCustomActionResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.SubscribeCustomActionResponse) */ {
 public:
  SubscribeCustomActionResponse();
  virtual ~SubscribeCustomActionResponse();

  SubscribeCustomActionResponse(const SubscribeCustomActionResponse& from);
  SubscribeCustomActionResponse(SubscribeCustomActionResponse&& from) noexcept
    : SubscribeCustomActionResponse() {
    *this = ::std::move(from);
  }

  inline SubscribeCustomActionResponse& operator=(const SubscribeCustomActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeCustomActionResponse& operator=(SubscribeCustomActionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SubscribeCustomActionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeCustomActionResponse* internal_default_instance() {
    return reinterpret_cast<const SubscribeCustomActionResponse*>(
               &_SubscribeCustomActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SubscribeCustomActionResponse& a, SubscribeCustomActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeCustomActionResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SubscribeCustomActionResponse* New() const final {
    return CreateMaybeMessage<SubscribeCustomActionResponse>(nullptr);
  }

  SubscribeCustomActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeCustomActionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SubscribeCustomActionResponse& from);
  void MergeFrom(const SubscribeCustomActionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeCustomActionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.SubscribeCustomActionResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_custom_5faction_2fcustom_5faction_2eproto);
    return ::descriptor_table_custom_5faction_2fcustom_5faction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 1,
  };
  // .mavsdk.rpc.custom_action.ActionToExecute action = 1;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  const ::mavsdk::rpc::custom_action::ActionToExecute& action() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* release_action();
  ::mavsdk::rpc::custom_action::ActionToExecute* mutable_action();
  void set_allocated_action(::mavsdk::rpc::custom_action::ActionToExecute* action);
  private:
  const ::mavsdk::rpc::custom_action::ActionToExecute& _internal_action() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* _internal_mutable_action();
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.SubscribeCustomActionResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::custom_action::ActionToExecute* action_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class RespondCustomActionRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.RespondCustomActionRequest) */ {
 public:
  RespondCustomActionRequest();
  virtual ~RespondCustomActionRequest();

  RespondCustomActionRequest(const RespondCustomActionRequest& from);
  RespondCustomActionRequest(RespondCustomActionRequest&& from) noexcept
    : RespondCustomActionRequest() {
    *this = ::std::move(from);
  }

  inline RespondCustomActionRequest& operator=(const RespondCustomActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondCustomActionRequest& operator=(RespondCustomActionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RespondCustomActionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RespondCustomActionRequest* internal_default_instance() {
    return reinterpret_cast<const RespondCustomActionRequest*>(
               &_RespondCustomActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RespondCustomActionRequest& a, RespondCustomActionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondCustomActionRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RespondCustomActionRequest* New() const final {
    return CreateMaybeMessage<RespondCustomActionRequest>(nullptr);
  }

  RespondCustomActionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RespondCustomActionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RespondCustomActionRequest& from);
  void MergeFrom(const RespondCustomActionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespondCustomActionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.RespondCustomActionRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_custom_5faction_2fcustom_5faction_2eproto);
    return ::descriptor_table_custom_5faction_2fcustom_5faction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // .mavsdk.rpc.custom_action.ActionToExecute action = 1;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  const ::mavsdk::rpc::custom_action::ActionToExecute& action() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* release_action();
  ::mavsdk::rpc::custom_action::ActionToExecute* mutable_action();
  void set_allocated_action(::mavsdk::rpc::custom_action::ActionToExecute* action);
  private:
  const ::mavsdk::rpc::custom_action::ActionToExecute& _internal_action() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* _internal_mutable_action();
  public:

  // .mavsdk.rpc.custom_action.CustomActionResult result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::mavsdk::rpc::custom_action::CustomActionResult& result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* release_result();
  ::mavsdk::rpc::custom_action::CustomActionResult* mutable_result();
  void set_allocated_result(::mavsdk::rpc::custom_action::CustomActionResult* result);
  private:
  const ::mavsdk::rpc::custom_action::CustomActionResult& _internal_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* _internal_mutable_result();
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.RespondCustomActionRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::custom_action::ActionToExecute* action_;
  ::mavsdk::rpc::custom_action::CustomActionResult* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class CustomActionResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.CustomActionResponse) */ {
 public:
  CustomActionResponse();
  virtual ~CustomActionResponse();

  CustomActionResponse(const CustomActionResponse& from);
  CustomActionResponse(CustomActionResponse&& from) noexcept
    : CustomActionResponse() {
    *this = ::std::move(from);
  }

  inline CustomActionResponse& operator=(const CustomActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomActionResponse& operator=(CustomActionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CustomActionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CustomActionResponse* internal_default_instance() {
    return reinterpret_cast<const CustomActionResponse*>(
               &_CustomActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CustomActionResponse& a, CustomActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomActionResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CustomActionResponse* New() const final {
    return CreateMaybeMessage<CustomActionResponse>(nullptr);
  }

  CustomActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CustomActionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CustomActionResponse& from);
  void MergeFrom(const CustomActionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomActionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.CustomActionResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_custom_5faction_2fcustom_5faction_2eproto);
    return ::descriptor_table_custom_5faction_2fcustom_5faction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // .mavsdk.rpc.custom_action.ActionToExecute action = 1;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  const ::mavsdk::rpc::custom_action::ActionToExecute& action() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* release_action();
  ::mavsdk::rpc::custom_action::ActionToExecute* mutable_action();
  void set_allocated_action(::mavsdk::rpc::custom_action::ActionToExecute* action);
  private:
  const ::mavsdk::rpc::custom_action::ActionToExecute& _internal_action() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* _internal_mutable_action();
  public:

  // .mavsdk.rpc.custom_action.CustomActionResult result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::mavsdk::rpc::custom_action::CustomActionResult& result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* release_result();
  ::mavsdk::rpc::custom_action::CustomActionResult* mutable_result();
  void set_allocated_result(::mavsdk::rpc::custom_action::CustomActionResult* result);
  private:
  const ::mavsdk::rpc::custom_action::CustomActionResult& _internal_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* _internal_mutable_result();
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.CustomActionResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::custom_action::ActionToExecute* action_;
  ::mavsdk::rpc::custom_action::CustomActionResult* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class ActionToExecute :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.ActionToExecute) */ {
 public:
  ActionToExecute();
  virtual ~ActionToExecute();

  ActionToExecute(const ActionToExecute& from);
  ActionToExecute(ActionToExecute&& from) noexcept
    : ActionToExecute() {
    *this = ::std::move(from);
  }

  inline ActionToExecute& operator=(const ActionToExecute& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActionToExecute& operator=(ActionToExecute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActionToExecute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionToExecute* internal_default_instance() {
    return reinterpret_cast<const ActionToExecute*>(
               &_ActionToExecute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ActionToExecute& a, ActionToExecute& b) {
    a.Swap(&b);
  }
  inline void Swap(ActionToExecute* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActionToExecute* New() const final {
    return CreateMaybeMessage<ActionToExecute>(nullptr);
  }

  ActionToExecute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActionToExecute>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActionToExecute& from);
  void MergeFrom(const ActionToExecute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionToExecute* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.ActionToExecute";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_custom_5faction_2fcustom_5faction_2eproto);
    return ::descriptor_table_custom_5faction_2fcustom_5faction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kTimeoutFieldNumber = 2,
  };
  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 timeout = 2;
  void clear_timeout();
  ::PROTOBUF_NAMESPACE_ID::int32 timeout() const;
  void set_timeout(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_timeout() const;
  void _internal_set_timeout(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.ActionToExecute)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 timeout_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class CustomActionResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.CustomActionResult) */ {
 public:
  CustomActionResult();
  virtual ~CustomActionResult();

  CustomActionResult(const CustomActionResult& from);
  CustomActionResult(CustomActionResult&& from) noexcept
    : CustomActionResult() {
    *this = ::std::move(from);
  }

  inline CustomActionResult& operator=(const CustomActionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomActionResult& operator=(CustomActionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CustomActionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CustomActionResult* internal_default_instance() {
    return reinterpret_cast<const CustomActionResult*>(
               &_CustomActionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CustomActionResult& a, CustomActionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomActionResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CustomActionResult* New() const final {
    return CreateMaybeMessage<CustomActionResult>(nullptr);
  }

  CustomActionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CustomActionResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CustomActionResult& from);
  void MergeFrom(const CustomActionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomActionResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.CustomActionResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_custom_5faction_2fcustom_5faction_2eproto);
    return ::descriptor_table_custom_5faction_2fcustom_5faction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef CustomActionResult_Result Result;
  static constexpr Result RESULT_UNKNOWN =
    CustomActionResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS =
    CustomActionResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_ERROR =
    CustomActionResult_Result_RESULT_ERROR;
  static constexpr Result RESULT_TIMEOUT =
    CustomActionResult_Result_RESULT_TIMEOUT;
  static constexpr Result RESULT_UNSUPPORTED =
    CustomActionResult_Result_RESULT_UNSUPPORTED;
  static inline bool Result_IsValid(int value) {
    return CustomActionResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN =
    CustomActionResult_Result_Result_MIN;
  static constexpr Result Result_MAX =
    CustomActionResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE =
    CustomActionResult_Result_Result_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Result_descriptor() {
    return CustomActionResult_Result_descriptor();
  }
  template<typename T>
  static inline const std::string& Result_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Result>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Result_Name.");
    return CustomActionResult_Result_Name(enum_t_value);
  }
  static inline bool Result_Parse(const std::string& name,
      Result* value) {
    return CustomActionResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str();
  const std::string& result_str() const;
  void set_result_str(const std::string& value);
  void set_result_str(std::string&& value);
  void set_result_str(const char* value);
  void set_result_str(const char* value, size_t size);
  std::string* mutable_result_str();
  std::string* release_result_str();
  void set_allocated_result_str(std::string* result_str);
  private:
  const std::string& _internal_result_str() const;
  void _internal_set_result_str(const std::string& value);
  std::string* _internal_mutable_result_str();
  public:

  // .mavsdk.rpc.custom_action.CustomActionResult.Result result = 1;
  void clear_result();
  ::mavsdk::rpc::custom_action::CustomActionResult_Result result() const;
  void set_result(::mavsdk::rpc::custom_action::CustomActionResult_Result value);
  private:
  ::mavsdk::rpc::custom_action::CustomActionResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::custom_action::CustomActionResult_Result value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.CustomActionResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_str_;
  int result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetCustomActionRequest

// -------------------------------------------------------------------

// SetCustomActionResponse

// .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
inline bool SetCustomActionResponse::_internal_has_custom_action_result() const {
  return this != internal_default_instance() && custom_action_result_ != nullptr;
}
inline bool SetCustomActionResponse::has_custom_action_result() const {
  return _internal_has_custom_action_result();
}
inline void SetCustomActionResponse::clear_custom_action_result() {
  if (GetArenaNoVirtual() == nullptr && custom_action_result_ != nullptr) {
    delete custom_action_result_;
  }
  custom_action_result_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& SetCustomActionResponse::_internal_custom_action_result() const {
  const ::mavsdk::rpc::custom_action::CustomActionResult* p = custom_action_result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::custom_action::CustomActionResult*>(
      &::mavsdk::rpc::custom_action::_CustomActionResult_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& SetCustomActionResponse::custom_action_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.SetCustomActionResponse.custom_action_result)
  return _internal_custom_action_result();
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* SetCustomActionResponse::release_custom_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.SetCustomActionResponse.custom_action_result)
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* SetCustomActionResponse::_internal_mutable_custom_action_result() {
  
  if (custom_action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(GetArenaNoVirtual());
    custom_action_result_ = p;
  }
  return custom_action_result_;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* SetCustomActionResponse::mutable_custom_action_result() {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.SetCustomActionResponse.custom_action_result)
  return _internal_mutable_custom_action_result();
}
inline void SetCustomActionResponse::set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete custom_action_result_;
  }
  if (custom_action_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      custom_action_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_action_result, submessage_arena);
    }
    
  } else {
    
  }
  custom_action_result_ = custom_action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.SetCustomActionResponse.custom_action_result)
}

// -------------------------------------------------------------------

// SubscribeCustomActionRequest

// -------------------------------------------------------------------

// SubscribeCustomActionResponse

// .mavsdk.rpc.custom_action.ActionToExecute action = 1;
inline bool SubscribeCustomActionResponse::_internal_has_action() const {
  return this != internal_default_instance() && action_ != nullptr;
}
inline bool SubscribeCustomActionResponse::has_action() const {
  return _internal_has_action();
}
inline void SubscribeCustomActionResponse::clear_action() {
  if (GetArenaNoVirtual() == nullptr && action_ != nullptr) {
    delete action_;
  }
  action_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& SubscribeCustomActionResponse::_internal_action() const {
  const ::mavsdk::rpc::custom_action::ActionToExecute* p = action_;
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::custom_action::ActionToExecute*>(
      &::mavsdk::rpc::custom_action::_ActionToExecute_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& SubscribeCustomActionResponse::action() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.SubscribeCustomActionResponse.action)
  return _internal_action();
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* SubscribeCustomActionResponse::release_action() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.SubscribeCustomActionResponse.action)
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_;
  action_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* SubscribeCustomActionResponse::_internal_mutable_action() {
  
  if (action_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionToExecute>(GetArenaNoVirtual());
    action_ = p;
  }
  return action_;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* SubscribeCustomActionResponse::mutable_action() {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.SubscribeCustomActionResponse.action)
  return _internal_mutable_action();
}
inline void SubscribeCustomActionResponse::set_allocated_action(::mavsdk::rpc::custom_action::ActionToExecute* action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_;
  }
  if (action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action, submessage_arena);
    }
    
  } else {
    
  }
  action_ = action;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.SubscribeCustomActionResponse.action)
}

// -------------------------------------------------------------------

// RespondCustomActionRequest

// .mavsdk.rpc.custom_action.ActionToExecute action = 1;
inline bool RespondCustomActionRequest::_internal_has_action() const {
  return this != internal_default_instance() && action_ != nullptr;
}
inline bool RespondCustomActionRequest::has_action() const {
  return _internal_has_action();
}
inline void RespondCustomActionRequest::clear_action() {
  if (GetArenaNoVirtual() == nullptr && action_ != nullptr) {
    delete action_;
  }
  action_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& RespondCustomActionRequest::_internal_action() const {
  const ::mavsdk::rpc::custom_action::ActionToExecute* p = action_;
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::custom_action::ActionToExecute*>(
      &::mavsdk::rpc::custom_action::_ActionToExecute_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& RespondCustomActionRequest::action() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.RespondCustomActionRequest.action)
  return _internal_action();
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* RespondCustomActionRequest::release_action() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.RespondCustomActionRequest.action)
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_;
  action_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* RespondCustomActionRequest::_internal_mutable_action() {
  
  if (action_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionToExecute>(GetArenaNoVirtual());
    action_ = p;
  }
  return action_;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* RespondCustomActionRequest::mutable_action() {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.RespondCustomActionRequest.action)
  return _internal_mutable_action();
}
inline void RespondCustomActionRequest::set_allocated_action(::mavsdk::rpc::custom_action::ActionToExecute* action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_;
  }
  if (action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action, submessage_arena);
    }
    
  } else {
    
  }
  action_ = action;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.RespondCustomActionRequest.action)
}

// .mavsdk.rpc.custom_action.CustomActionResult result = 2;
inline bool RespondCustomActionRequest::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool RespondCustomActionRequest::has_result() const {
  return _internal_has_result();
}
inline void RespondCustomActionRequest::clear_result() {
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& RespondCustomActionRequest::_internal_result() const {
  const ::mavsdk::rpc::custom_action::CustomActionResult* p = result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::custom_action::CustomActionResult*>(
      &::mavsdk::rpc::custom_action::_CustomActionResult_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& RespondCustomActionRequest::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.RespondCustomActionRequest.result)
  return _internal_result();
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionRequest::release_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.RespondCustomActionRequest.result)
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionRequest::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(GetArenaNoVirtual());
    result_ = p;
  }
  return result_;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionRequest::mutable_result() {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.RespondCustomActionRequest.result)
  return _internal_mutable_result();
}
inline void RespondCustomActionRequest::set_allocated_result(::mavsdk::rpc::custom_action::CustomActionResult* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.RespondCustomActionRequest.result)
}

// -------------------------------------------------------------------

// CustomActionResponse

// .mavsdk.rpc.custom_action.ActionToExecute action = 1;
inline bool CustomActionResponse::_internal_has_action() const {
  return this != internal_default_instance() && action_ != nullptr;
}
inline bool CustomActionResponse::has_action() const {
  return _internal_has_action();
}
inline void CustomActionResponse::clear_action() {
  if (GetArenaNoVirtual() == nullptr && action_ != nullptr) {
    delete action_;
  }
  action_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& CustomActionResponse::_internal_action() const {
  const ::mavsdk::rpc::custom_action::ActionToExecute* p = action_;
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::custom_action::ActionToExecute*>(
      &::mavsdk::rpc::custom_action::_ActionToExecute_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& CustomActionResponse::action() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionResponse.action)
  return _internal_action();
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionResponse::release_action() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.CustomActionResponse.action)
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_;
  action_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionResponse::_internal_mutable_action() {
  
  if (action_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionToExecute>(GetArenaNoVirtual());
    action_ = p;
  }
  return action_;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionResponse::mutable_action() {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.CustomActionResponse.action)
  return _internal_mutable_action();
}
inline void CustomActionResponse::set_allocated_action(::mavsdk::rpc::custom_action::ActionToExecute* action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_;
  }
  if (action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action, submessage_arena);
    }
    
  } else {
    
  }
  action_ = action;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.CustomActionResponse.action)
}

// .mavsdk.rpc.custom_action.CustomActionResult result = 2;
inline bool CustomActionResponse::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool CustomActionResponse::has_result() const {
  return _internal_has_result();
}
inline void CustomActionResponse::clear_result() {
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& CustomActionResponse::_internal_result() const {
  const ::mavsdk::rpc::custom_action::CustomActionResult* p = result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::custom_action::CustomActionResult*>(
      &::mavsdk::rpc::custom_action::_CustomActionResult_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& CustomActionResponse::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionResponse.result)
  return _internal_result();
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* CustomActionResponse::release_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.CustomActionResponse.result)
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* CustomActionResponse::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(GetArenaNoVirtual());
    result_ = p;
  }
  return result_;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* CustomActionResponse::mutable_result() {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.CustomActionResponse.result)
  return _internal_mutable_result();
}
inline void CustomActionResponse::set_allocated_result(::mavsdk::rpc::custom_action::CustomActionResult* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.CustomActionResponse.result)
}

// -------------------------------------------------------------------

// ActionToExecute

// int32 id = 1;
inline void ActionToExecute::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActionToExecute::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActionToExecute::id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionToExecute.id)
  return _internal_id();
}
inline void ActionToExecute::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void ActionToExecute::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionToExecute.id)
}

// int32 timeout = 2;
inline void ActionToExecute::clear_timeout() {
  timeout_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActionToExecute::_internal_timeout() const {
  return timeout_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActionToExecute::timeout() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionToExecute.timeout)
  return _internal_timeout();
}
inline void ActionToExecute::_internal_set_timeout(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  timeout_ = value;
}
inline void ActionToExecute::set_timeout(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionToExecute.timeout)
}

// -------------------------------------------------------------------

// CustomActionResult

// .mavsdk.rpc.custom_action.CustomActionResult.Result result = 1;
inline void CustomActionResult::clear_result() {
  result_ = 0;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult_Result CustomActionResult::_internal_result() const {
  return static_cast< ::mavsdk::rpc::custom_action::CustomActionResult_Result >(result_);
}
inline ::mavsdk::rpc::custom_action::CustomActionResult_Result CustomActionResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionResult.result)
  return _internal_result();
}
inline void CustomActionResult::_internal_set_result(::mavsdk::rpc::custom_action::CustomActionResult_Result value) {
  
  result_ = value;
}
inline void CustomActionResult::set_result(::mavsdk::rpc::custom_action::CustomActionResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.CustomActionResult.result)
}

// string result_str = 2;
inline void CustomActionResult::clear_result_str() {
  result_str_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CustomActionResult::result_str() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionResult.result_str)
  return _internal_result_str();
}
inline void CustomActionResult::set_result_str(const std::string& value) {
  _internal_set_result_str(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.CustomActionResult.result_str)
}
inline std::string* CustomActionResult::mutable_result_str() {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.CustomActionResult.result_str)
  return _internal_mutable_result_str();
}
inline const std::string& CustomActionResult::_internal_result_str() const {
  return result_str_.GetNoArena();
}
inline void CustomActionResult::_internal_set_result_str(const std::string& value) {
  
  result_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CustomActionResult::set_result_str(std::string&& value) {
  
  result_str_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mavsdk.rpc.custom_action.CustomActionResult.result_str)
}
inline void CustomActionResult::set_result_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  result_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mavsdk.rpc.custom_action.CustomActionResult.result_str)
}
inline void CustomActionResult::set_result_str(const char* value, size_t size) {
  
  result_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mavsdk.rpc.custom_action.CustomActionResult.result_str)
}
inline std::string* CustomActionResult::_internal_mutable_result_str() {
  
  return result_str_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CustomActionResult::release_result_str() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.CustomActionResult.result_str)
  
  return result_str_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CustomActionResult::set_allocated_result_str(std::string* result_str) {
  if (result_str != nullptr) {
    
  } else {
    
  }
  result_str_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), result_str);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.CustomActionResult.result_str)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace custom_action
}  // namespace rpc
}  // namespace mavsdk

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::mavsdk::rpc::custom_action::CustomActionResult_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::custom_action::CustomActionResult_Result>() {
  return ::mavsdk::rpc::custom_action::CustomActionResult_Result_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_custom_5faction_2fcustom_5faction_2eproto
