// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/core.proto

#include "core/core.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace mavsdk {
namespace rpc {
namespace core {
PROTOBUF_CONSTEXPR SubscribeConnectionStateRequest::SubscribeConnectionStateRequest(
    ::_pbi::ConstantInitialized){}
struct SubscribeConnectionStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeConnectionStateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeConnectionStateRequestDefaultTypeInternal() {}
  union {
    SubscribeConnectionStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeConnectionStateRequestDefaultTypeInternal _SubscribeConnectionStateRequest_default_instance_;
PROTOBUF_CONSTEXPR ConnectionStateResponse::ConnectionStateResponse(
    ::_pbi::ConstantInitialized)
  : connection_state_(nullptr){}
struct ConnectionStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectionStateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectionStateResponseDefaultTypeInternal() {}
  union {
    ConnectionStateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectionStateResponseDefaultTypeInternal _ConnectionStateResponse_default_instance_;
PROTOBUF_CONSTEXPR SetMavlinkTimeoutRequest::SetMavlinkTimeoutRequest(
    ::_pbi::ConstantInitialized)
  : timeout_s_(0){}
struct SetMavlinkTimeoutRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetMavlinkTimeoutRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetMavlinkTimeoutRequestDefaultTypeInternal() {}
  union {
    SetMavlinkTimeoutRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetMavlinkTimeoutRequestDefaultTypeInternal _SetMavlinkTimeoutRequest_default_instance_;
PROTOBUF_CONSTEXPR SetMavlinkTimeoutResponse::SetMavlinkTimeoutResponse(
    ::_pbi::ConstantInitialized){}
struct SetMavlinkTimeoutResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetMavlinkTimeoutResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetMavlinkTimeoutResponseDefaultTypeInternal() {}
  union {
    SetMavlinkTimeoutResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetMavlinkTimeoutResponseDefaultTypeInternal _SetMavlinkTimeoutResponse_default_instance_;
PROTOBUF_CONSTEXPR ConnectionState::ConnectionState(
    ::_pbi::ConstantInitialized)
  : is_connected_(false){}
struct ConnectionStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectionStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectionStateDefaultTypeInternal() {}
  union {
    ConnectionState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectionStateDefaultTypeInternal _ConnectionState_default_instance_;
}  // namespace core
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_core_2fcore_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_core_2fcore_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_core_2fcore_2eproto = nullptr;

const uint32_t TableStruct_core_2fcore_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::core::SubscribeConnectionStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::core::ConnectionStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::core::ConnectionStateResponse, connection_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::core::SetMavlinkTimeoutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::core::SetMavlinkTimeoutRequest, timeout_s_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::core::SetMavlinkTimeoutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::core::ConnectionState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::core::ConnectionState, is_connected_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mavsdk::rpc::core::SubscribeConnectionStateRequest)},
  { 6, -1, -1, sizeof(::mavsdk::rpc::core::ConnectionStateResponse)},
  { 13, -1, -1, sizeof(::mavsdk::rpc::core::SetMavlinkTimeoutRequest)},
  { 20, -1, -1, sizeof(::mavsdk::rpc::core::SetMavlinkTimeoutResponse)},
  { 26, -1, -1, sizeof(::mavsdk::rpc::core::ConnectionState)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::mavsdk::rpc::core::_SubscribeConnectionStateRequest_default_instance_._instance,
  &::mavsdk::rpc::core::_ConnectionStateResponse_default_instance_._instance,
  &::mavsdk::rpc::core::_SetMavlinkTimeoutRequest_default_instance_._instance,
  &::mavsdk::rpc::core::_SetMavlinkTimeoutResponse_default_instance_._instance,
  &::mavsdk::rpc::core::_ConnectionState_default_instance_._instance,
};

const char descriptor_table_protodef_core_2fcore_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017core/core.proto\022\017mavsdk.rpc.core\"!\n\037Su"
  "bscribeConnectionStateRequest\"U\n\027Connect"
  "ionStateResponse\022:\n\020connection_state\030\001 \001"
  "(\0132 .mavsdk.rpc.core.ConnectionState\"-\n\030"
  "SetMavlinkTimeoutRequest\022\021\n\ttimeout_s\030\001 "
  "\001(\001\"\033\n\031SetMavlinkTimeoutResponse\"\'\n\017Conn"
  "ectionState\022\024\n\014is_connected\030\002 \001(\0102\367\001\n\013Co"
  "reService\022z\n\030SubscribeConnectionState\0220."
  "mavsdk.rpc.core.SubscribeConnectionState"
  "Request\032(.mavsdk.rpc.core.ConnectionStat"
  "eResponse\"\0000\001\022l\n\021SetMavlinkTimeout\022).mav"
  "sdk.rpc.core.SetMavlinkTimeoutRequest\032*."
  "mavsdk.rpc.core.SetMavlinkTimeoutRespons"
  "e\"\000B\033\n\016io.mavsdk.coreB\tCoreProtob\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_core_2fcore_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_core_2fcore_2eproto = {
    false, false, 560, descriptor_table_protodef_core_2fcore_2eproto,
    "core/core.proto",
    &descriptor_table_core_2fcore_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_core_2fcore_2eproto::offsets,
    file_level_metadata_core_2fcore_2eproto, file_level_enum_descriptors_core_2fcore_2eproto,
    file_level_service_descriptors_core_2fcore_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_core_2fcore_2eproto_getter() {
  return &descriptor_table_core_2fcore_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_core_2fcore_2eproto(&descriptor_table_core_2fcore_2eproto);
namespace mavsdk {
namespace rpc {
namespace core {

// ===================================================================

class SubscribeConnectionStateRequest::_Internal {
 public:
};

SubscribeConnectionStateRequest::SubscribeConnectionStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.core.SubscribeConnectionStateRequest)
}
SubscribeConnectionStateRequest::SubscribeConnectionStateRequest(const SubscribeConnectionStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.core.SubscribeConnectionStateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeConnectionStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeConnectionStateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeConnectionStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fcore_2eproto_getter, &descriptor_table_core_2fcore_2eproto_once,
      file_level_metadata_core_2fcore_2eproto[0]);
}

// ===================================================================

class ConnectionStateResponse::_Internal {
 public:
  static const ::mavsdk::rpc::core::ConnectionState& connection_state(const ConnectionStateResponse* msg);
};

const ::mavsdk::rpc::core::ConnectionState&
ConnectionStateResponse::_Internal::connection_state(const ConnectionStateResponse* msg) {
  return *msg->connection_state_;
}
ConnectionStateResponse::ConnectionStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.core.ConnectionStateResponse)
}
ConnectionStateResponse::ConnectionStateResponse(const ConnectionStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_connection_state()) {
    connection_state_ = new ::mavsdk::rpc::core::ConnectionState(*from.connection_state_);
  } else {
    connection_state_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.core.ConnectionStateResponse)
}

inline void ConnectionStateResponse::SharedCtor() {
connection_state_ = nullptr;
}

ConnectionStateResponse::~ConnectionStateResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.core.ConnectionStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConnectionStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete connection_state_;
}

void ConnectionStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConnectionStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.core.ConnectionStateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && connection_state_ != nullptr) {
    delete connection_state_;
  }
  connection_state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConnectionStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.core.ConnectionState connection_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_connection_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConnectionStateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.core.ConnectionStateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.core.ConnectionState connection_state = 1;
  if (this->_internal_has_connection_state()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::connection_state(this),
        _Internal::connection_state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.core.ConnectionStateResponse)
  return target;
}

size_t ConnectionStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.core.ConnectionStateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.core.ConnectionState connection_state = 1;
  if (this->_internal_has_connection_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *connection_state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConnectionStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConnectionStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConnectionStateResponse::GetClassData() const { return &_class_data_; }

void ConnectionStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConnectionStateResponse *>(to)->MergeFrom(
      static_cast<const ConnectionStateResponse &>(from));
}


void ConnectionStateResponse::MergeFrom(const ConnectionStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.core.ConnectionStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_connection_state()) {
    _internal_mutable_connection_state()->::mavsdk::rpc::core::ConnectionState::MergeFrom(from._internal_connection_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectionStateResponse::CopyFrom(const ConnectionStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.core.ConnectionStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionStateResponse::IsInitialized() const {
  return true;
}

void ConnectionStateResponse::InternalSwap(ConnectionStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(connection_state_, other->connection_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConnectionStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fcore_2eproto_getter, &descriptor_table_core_2fcore_2eproto_once,
      file_level_metadata_core_2fcore_2eproto[1]);
}

// ===================================================================

class SetMavlinkTimeoutRequest::_Internal {
 public:
};

SetMavlinkTimeoutRequest::SetMavlinkTimeoutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.core.SetMavlinkTimeoutRequest)
}
SetMavlinkTimeoutRequest::SetMavlinkTimeoutRequest(const SetMavlinkTimeoutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  timeout_s_ = from.timeout_s_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.core.SetMavlinkTimeoutRequest)
}

inline void SetMavlinkTimeoutRequest::SharedCtor() {
timeout_s_ = 0;
}

SetMavlinkTimeoutRequest::~SetMavlinkTimeoutRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.core.SetMavlinkTimeoutRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetMavlinkTimeoutRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetMavlinkTimeoutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetMavlinkTimeoutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.core.SetMavlinkTimeoutRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeout_s_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMavlinkTimeoutRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double timeout_s = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          timeout_s_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetMavlinkTimeoutRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.core.SetMavlinkTimeoutRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double timeout_s = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_timeout_s = this->_internal_timeout_s();
  uint64_t raw_timeout_s;
  memcpy(&raw_timeout_s, &tmp_timeout_s, sizeof(tmp_timeout_s));
  if (raw_timeout_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_timeout_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.core.SetMavlinkTimeoutRequest)
  return target;
}

size_t SetMavlinkTimeoutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.core.SetMavlinkTimeoutRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double timeout_s = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_timeout_s = this->_internal_timeout_s();
  uint64_t raw_timeout_s;
  memcpy(&raw_timeout_s, &tmp_timeout_s, sizeof(tmp_timeout_s));
  if (raw_timeout_s != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetMavlinkTimeoutRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetMavlinkTimeoutRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetMavlinkTimeoutRequest::GetClassData() const { return &_class_data_; }

void SetMavlinkTimeoutRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetMavlinkTimeoutRequest *>(to)->MergeFrom(
      static_cast<const SetMavlinkTimeoutRequest &>(from));
}


void SetMavlinkTimeoutRequest::MergeFrom(const SetMavlinkTimeoutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.core.SetMavlinkTimeoutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_timeout_s = from._internal_timeout_s();
  uint64_t raw_timeout_s;
  memcpy(&raw_timeout_s, &tmp_timeout_s, sizeof(tmp_timeout_s));
  if (raw_timeout_s != 0) {
    _internal_set_timeout_s(from._internal_timeout_s());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetMavlinkTimeoutRequest::CopyFrom(const SetMavlinkTimeoutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.core.SetMavlinkTimeoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMavlinkTimeoutRequest::IsInitialized() const {
  return true;
}

void SetMavlinkTimeoutRequest::InternalSwap(SetMavlinkTimeoutRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(timeout_s_, other->timeout_s_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMavlinkTimeoutRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fcore_2eproto_getter, &descriptor_table_core_2fcore_2eproto_once,
      file_level_metadata_core_2fcore_2eproto[2]);
}

// ===================================================================

class SetMavlinkTimeoutResponse::_Internal {
 public:
};

SetMavlinkTimeoutResponse::SetMavlinkTimeoutResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.core.SetMavlinkTimeoutResponse)
}
SetMavlinkTimeoutResponse::SetMavlinkTimeoutResponse(const SetMavlinkTimeoutResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.core.SetMavlinkTimeoutResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetMavlinkTimeoutResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetMavlinkTimeoutResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetMavlinkTimeoutResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fcore_2eproto_getter, &descriptor_table_core_2fcore_2eproto_once,
      file_level_metadata_core_2fcore_2eproto[3]);
}

// ===================================================================

class ConnectionState::_Internal {
 public:
};

ConnectionState::ConnectionState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.core.ConnectionState)
}
ConnectionState::ConnectionState(const ConnectionState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  is_connected_ = from.is_connected_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.core.ConnectionState)
}

inline void ConnectionState::SharedCtor() {
is_connected_ = false;
}

ConnectionState::~ConnectionState() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.core.ConnectionState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConnectionState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ConnectionState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConnectionState::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.core.ConnectionState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_connected_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConnectionState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_connected = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          is_connected_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConnectionState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.core.ConnectionState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_connected = 2;
  if (this->_internal_is_connected() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_connected(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.core.ConnectionState)
  return target;
}

size_t ConnectionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.core.ConnectionState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_connected = 2;
  if (this->_internal_is_connected() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConnectionState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConnectionState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConnectionState::GetClassData() const { return &_class_data_; }

void ConnectionState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConnectionState *>(to)->MergeFrom(
      static_cast<const ConnectionState &>(from));
}


void ConnectionState::MergeFrom(const ConnectionState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.core.ConnectionState)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_connected() != 0) {
    _internal_set_is_connected(from._internal_is_connected());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectionState::CopyFrom(const ConnectionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.core.ConnectionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionState::IsInitialized() const {
  return true;
}

void ConnectionState::InternalSwap(ConnectionState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(is_connected_, other->is_connected_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConnectionState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fcore_2eproto_getter, &descriptor_table_core_2fcore_2eproto_once,
      file_level_metadata_core_2fcore_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::core::SubscribeConnectionStateRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::core::SubscribeConnectionStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::core::SubscribeConnectionStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::core::ConnectionStateResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::core::ConnectionStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::core::ConnectionStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::core::SetMavlinkTimeoutRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::core::SetMavlinkTimeoutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::core::SetMavlinkTimeoutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::core::SetMavlinkTimeoutResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::core::SetMavlinkTimeoutResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::core::SetMavlinkTimeoutResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::core::ConnectionState*
Arena::CreateMaybeMessage< ::mavsdk::rpc::core::ConnectionState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::core::ConnectionState >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
