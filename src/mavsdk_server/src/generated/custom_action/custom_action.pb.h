// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: custom_action/custom_action.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_custom_5faction_2fcustom_5faction_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_custom_5faction_2fcustom_5faction_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_custom_5faction_2fcustom_5faction_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_custom_5faction_2fcustom_5faction_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_custom_5faction_2fcustom_5faction_2eproto;
namespace mavsdk {
namespace rpc {
namespace custom_action {
class ActionMetadata;
struct ActionMetadataDefaultTypeInternal;
extern ActionMetadataDefaultTypeInternal _ActionMetadata_default_instance_;
class ActionToExecute;
struct ActionToExecuteDefaultTypeInternal;
extern ActionToExecuteDefaultTypeInternal _ActionToExecute_default_instance_;
class Command;
struct CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class CustomActionCancellationResponse;
struct CustomActionCancellationResponseDefaultTypeInternal;
extern CustomActionCancellationResponseDefaultTypeInternal _CustomActionCancellationResponse_default_instance_;
class CustomActionMetadataRequest;
struct CustomActionMetadataRequestDefaultTypeInternal;
extern CustomActionMetadataRequestDefaultTypeInternal _CustomActionMetadataRequest_default_instance_;
class CustomActionMetadataResponse;
struct CustomActionMetadataResponseDefaultTypeInternal;
extern CustomActionMetadataResponseDefaultTypeInternal _CustomActionMetadataResponse_default_instance_;
class CustomActionResponse;
struct CustomActionResponseDefaultTypeInternal;
extern CustomActionResponseDefaultTypeInternal _CustomActionResponse_default_instance_;
class CustomActionResult;
struct CustomActionResultDefaultTypeInternal;
extern CustomActionResultDefaultTypeInternal _CustomActionResult_default_instance_;
class ExecuteCustomActionGlobalScriptRequest;
struct ExecuteCustomActionGlobalScriptRequestDefaultTypeInternal;
extern ExecuteCustomActionGlobalScriptRequestDefaultTypeInternal _ExecuteCustomActionGlobalScriptRequest_default_instance_;
class ExecuteCustomActionGlobalScriptResponse;
struct ExecuteCustomActionGlobalScriptResponseDefaultTypeInternal;
extern ExecuteCustomActionGlobalScriptResponseDefaultTypeInternal _ExecuteCustomActionGlobalScriptResponse_default_instance_;
class ExecuteCustomActionStageRequest;
struct ExecuteCustomActionStageRequestDefaultTypeInternal;
extern ExecuteCustomActionStageRequestDefaultTypeInternal _ExecuteCustomActionStageRequest_default_instance_;
class ExecuteCustomActionStageResponse;
struct ExecuteCustomActionStageResponseDefaultTypeInternal;
extern ExecuteCustomActionStageResponseDefaultTypeInternal _ExecuteCustomActionStageResponse_default_instance_;
class Parameter;
struct ParameterDefaultTypeInternal;
extern ParameterDefaultTypeInternal _Parameter_default_instance_;
class RespondCustomActionRequest;
struct RespondCustomActionRequestDefaultTypeInternal;
extern RespondCustomActionRequestDefaultTypeInternal _RespondCustomActionRequest_default_instance_;
class RespondCustomActionResponse;
struct RespondCustomActionResponseDefaultTypeInternal;
extern RespondCustomActionResponseDefaultTypeInternal _RespondCustomActionResponse_default_instance_;
class SetCustomActionRequest;
struct SetCustomActionRequestDefaultTypeInternal;
extern SetCustomActionRequestDefaultTypeInternal _SetCustomActionRequest_default_instance_;
class SetCustomActionResponse;
struct SetCustomActionResponseDefaultTypeInternal;
extern SetCustomActionResponseDefaultTypeInternal _SetCustomActionResponse_default_instance_;
class Stage;
struct StageDefaultTypeInternal;
extern StageDefaultTypeInternal _Stage_default_instance_;
class SubscribeCustomActionCancellationRequest;
struct SubscribeCustomActionCancellationRequestDefaultTypeInternal;
extern SubscribeCustomActionCancellationRequestDefaultTypeInternal _SubscribeCustomActionCancellationRequest_default_instance_;
class SubscribeCustomActionRequest;
struct SubscribeCustomActionRequestDefaultTypeInternal;
extern SubscribeCustomActionRequestDefaultTypeInternal _SubscribeCustomActionRequest_default_instance_;
}  // namespace custom_action
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> ::mavsdk::rpc::custom_action::ActionMetadata* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionMetadata>(Arena*);
template<> ::mavsdk::rpc::custom_action::ActionToExecute* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionToExecute>(Arena*);
template<> ::mavsdk::rpc::custom_action::Command* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::Command>(Arena*);
template<> ::mavsdk::rpc::custom_action::CustomActionCancellationResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionCancellationResponse>(Arena*);
template<> ::mavsdk::rpc::custom_action::CustomActionMetadataRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionMetadataRequest>(Arena*);
template<> ::mavsdk::rpc::custom_action::CustomActionMetadataResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionMetadataResponse>(Arena*);
template<> ::mavsdk::rpc::custom_action::CustomActionResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResponse>(Arena*);
template<> ::mavsdk::rpc::custom_action::CustomActionResult* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(Arena*);
template<> ::mavsdk::rpc::custom_action::ExecuteCustomActionGlobalScriptRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::ExecuteCustomActionGlobalScriptRequest>(Arena*);
template<> ::mavsdk::rpc::custom_action::ExecuteCustomActionGlobalScriptResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::ExecuteCustomActionGlobalScriptResponse>(Arena*);
template<> ::mavsdk::rpc::custom_action::ExecuteCustomActionStageRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::ExecuteCustomActionStageRequest>(Arena*);
template<> ::mavsdk::rpc::custom_action::ExecuteCustomActionStageResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::ExecuteCustomActionStageResponse>(Arena*);
template<> ::mavsdk::rpc::custom_action::Parameter* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::Parameter>(Arena*);
template<> ::mavsdk::rpc::custom_action::RespondCustomActionRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::RespondCustomActionRequest>(Arena*);
template<> ::mavsdk::rpc::custom_action::RespondCustomActionResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::RespondCustomActionResponse>(Arena*);
template<> ::mavsdk::rpc::custom_action::SetCustomActionRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::SetCustomActionRequest>(Arena*);
template<> ::mavsdk::rpc::custom_action::SetCustomActionResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::SetCustomActionResponse>(Arena*);
template<> ::mavsdk::rpc::custom_action::Stage* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::Stage>(Arena*);
template<> ::mavsdk::rpc::custom_action::SubscribeCustomActionCancellationRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::SubscribeCustomActionCancellationRequest>(Arena*);
template<> ::mavsdk::rpc::custom_action::SubscribeCustomActionRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::custom_action::SubscribeCustomActionRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mavsdk {
namespace rpc {
namespace custom_action {

enum Command_CommandType : int {
  Command_CommandType_COMMAND_TYPE_LONG = 0,
  Command_CommandType_COMMAND_TYPE_INT = 1,
  Command_CommandType_Command_CommandType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Command_CommandType_Command_CommandType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Command_CommandType_IsValid(int value);
constexpr Command_CommandType Command_CommandType_CommandType_MIN = Command_CommandType_COMMAND_TYPE_LONG;
constexpr Command_CommandType Command_CommandType_CommandType_MAX = Command_CommandType_COMMAND_TYPE_INT;
constexpr int Command_CommandType_CommandType_ARRAYSIZE = Command_CommandType_CommandType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Command_CommandType_descriptor();
template<typename T>
inline const std::string& Command_CommandType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Command_CommandType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Command_CommandType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Command_CommandType_descriptor(), enum_t_value);
}
inline bool Command_CommandType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Command_CommandType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Command_CommandType>(
    Command_CommandType_descriptor(), name, value);
}
enum Parameter_ParameterType : int {
  Parameter_ParameterType_PARAMETER_TYPE_INT = 0,
  Parameter_ParameterType_PARAMETER_TYPE_FLOAT = 1,
  Parameter_ParameterType_Parameter_ParameterType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Parameter_ParameterType_Parameter_ParameterType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Parameter_ParameterType_IsValid(int value);
constexpr Parameter_ParameterType Parameter_ParameterType_ParameterType_MIN = Parameter_ParameterType_PARAMETER_TYPE_INT;
constexpr Parameter_ParameterType Parameter_ParameterType_ParameterType_MAX = Parameter_ParameterType_PARAMETER_TYPE_FLOAT;
constexpr int Parameter_ParameterType_ParameterType_ARRAYSIZE = Parameter_ParameterType_ParameterType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Parameter_ParameterType_descriptor();
template<typename T>
inline const std::string& Parameter_ParameterType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Parameter_ParameterType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Parameter_ParameterType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Parameter_ParameterType_descriptor(), enum_t_value);
}
inline bool Parameter_ParameterType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Parameter_ParameterType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Parameter_ParameterType>(
    Parameter_ParameterType_descriptor(), name, value);
}
enum Stage_StateTransitionCondition : int {
  Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_RESULT_SUCCESS = 0,
  Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_TIMEOUT = 1,
  Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_LANDING_COMPLETE = 2,
  Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_TAKEOFF_COMPLETE = 3,
  Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_MODE_CHANGE = 4,
  Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_CUSTOM_CONDITION_TRUE = 5,
  Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_CUSTOM_CONDITION_FALSE = 6,
  Stage_StateTransitionCondition_Stage_StateTransitionCondition_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  Stage_StateTransitionCondition_Stage_StateTransitionCondition_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool Stage_StateTransitionCondition_IsValid(int value);
constexpr Stage_StateTransitionCondition Stage_StateTransitionCondition_StateTransitionCondition_MIN = Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_RESULT_SUCCESS;
constexpr Stage_StateTransitionCondition Stage_StateTransitionCondition_StateTransitionCondition_MAX = Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_CUSTOM_CONDITION_FALSE;
constexpr int Stage_StateTransitionCondition_StateTransitionCondition_ARRAYSIZE = Stage_StateTransitionCondition_StateTransitionCondition_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Stage_StateTransitionCondition_descriptor();
template<typename T>
inline const std::string& Stage_StateTransitionCondition_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Stage_StateTransitionCondition>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Stage_StateTransitionCondition_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Stage_StateTransitionCondition_descriptor(), enum_t_value);
}
inline bool Stage_StateTransitionCondition_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Stage_StateTransitionCondition* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Stage_StateTransitionCondition>(
    Stage_StateTransitionCondition_descriptor(), name, value);
}
enum ActionMetadata_ActionCompleteCondition : int {
  ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_LAST_STAGE_COMPLETE = 0,
  ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_TIMEOUT = 1,
  ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_RESULT_SUCCESS = 2,
  ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_CUSTOM_CONDITION_TRUE = 3,
  ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_CUSTOM_CONDITION_FALSE = 4,
  ActionMetadata_ActionCompleteCondition_ActionMetadata_ActionCompleteCondition_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  ActionMetadata_ActionCompleteCondition_ActionMetadata_ActionCompleteCondition_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool ActionMetadata_ActionCompleteCondition_IsValid(int value);
constexpr ActionMetadata_ActionCompleteCondition ActionMetadata_ActionCompleteCondition_ActionCompleteCondition_MIN = ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_LAST_STAGE_COMPLETE;
constexpr ActionMetadata_ActionCompleteCondition ActionMetadata_ActionCompleteCondition_ActionCompleteCondition_MAX = ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_CUSTOM_CONDITION_FALSE;
constexpr int ActionMetadata_ActionCompleteCondition_ActionCompleteCondition_ARRAYSIZE = ActionMetadata_ActionCompleteCondition_ActionCompleteCondition_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ActionMetadata_ActionCompleteCondition_descriptor();
template<typename T>
inline const std::string& ActionMetadata_ActionCompleteCondition_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ActionMetadata_ActionCompleteCondition>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ActionMetadata_ActionCompleteCondition_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ActionMetadata_ActionCompleteCondition_descriptor(), enum_t_value);
}
inline bool ActionMetadata_ActionCompleteCondition_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ActionMetadata_ActionCompleteCondition* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ActionMetadata_ActionCompleteCondition>(
    ActionMetadata_ActionCompleteCondition_descriptor(), name, value);
}
enum CustomActionResult_Result : int {
  CustomActionResult_Result_RESULT_UNKNOWN = 0,
  CustomActionResult_Result_RESULT_SUCCESS = 1,
  CustomActionResult_Result_RESULT_ERROR = 2,
  CustomActionResult_Result_RESULT_TIMEOUT = 3,
  CustomActionResult_Result_RESULT_UNSUPPORTED = 4,
  CustomActionResult_Result_RESULT_IN_PROGRESS = 5,
  CustomActionResult_Result_CustomActionResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  CustomActionResult_Result_CustomActionResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool CustomActionResult_Result_IsValid(int value);
constexpr CustomActionResult_Result CustomActionResult_Result_Result_MIN = CustomActionResult_Result_RESULT_UNKNOWN;
constexpr CustomActionResult_Result CustomActionResult_Result_Result_MAX = CustomActionResult_Result_RESULT_IN_PROGRESS;
constexpr int CustomActionResult_Result_Result_ARRAYSIZE = CustomActionResult_Result_Result_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CustomActionResult_Result_descriptor();
template<typename T>
inline const std::string& CustomActionResult_Result_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CustomActionResult_Result>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CustomActionResult_Result_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CustomActionResult_Result_descriptor(), enum_t_value);
}
inline bool CustomActionResult_Result_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CustomActionResult_Result* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CustomActionResult_Result>(
    CustomActionResult_Result_descriptor(), name, value);
}
// ===================================================================

class SetCustomActionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.SetCustomActionRequest) */ {
 public:
  inline SetCustomActionRequest() : SetCustomActionRequest(nullptr) {}
  ~SetCustomActionRequest() override;
  explicit PROTOBUF_CONSTEXPR SetCustomActionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetCustomActionRequest(const SetCustomActionRequest& from);
  SetCustomActionRequest(SetCustomActionRequest&& from) noexcept
    : SetCustomActionRequest() {
    *this = ::std::move(from);
  }

  inline SetCustomActionRequest& operator=(const SetCustomActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetCustomActionRequest& operator=(SetCustomActionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetCustomActionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetCustomActionRequest* internal_default_instance() {
    return reinterpret_cast<const SetCustomActionRequest*>(
               &_SetCustomActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetCustomActionRequest& a, SetCustomActionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetCustomActionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetCustomActionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetCustomActionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetCustomActionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetCustomActionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SetCustomActionRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCustomActionRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.SetCustomActionRequest";
  }
  protected:
  explicit SetCustomActionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionToExecuteFieldNumber = 1,
  };
  // .mavsdk.rpc.custom_action.ActionToExecute action_to_execute = 1;
  bool has_action_to_execute() const;
  private:
  bool _internal_has_action_to_execute() const;
  public:
  void clear_action_to_execute();
  const ::mavsdk::rpc::custom_action::ActionToExecute& action_to_execute() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::ActionToExecute* release_action_to_execute();
  ::mavsdk::rpc::custom_action::ActionToExecute* mutable_action_to_execute();
  void set_allocated_action_to_execute(::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute);
  private:
  const ::mavsdk::rpc::custom_action::ActionToExecute& _internal_action_to_execute() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* _internal_mutable_action_to_execute();
  public:
  void unsafe_arena_set_allocated_action_to_execute(
      ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute);
  ::mavsdk::rpc::custom_action::ActionToExecute* unsafe_arena_release_action_to_execute();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.SetCustomActionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class SetCustomActionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.SetCustomActionResponse) */ {
 public:
  inline SetCustomActionResponse() : SetCustomActionResponse(nullptr) {}
  ~SetCustomActionResponse() override;
  explicit PROTOBUF_CONSTEXPR SetCustomActionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetCustomActionResponse(const SetCustomActionResponse& from);
  SetCustomActionResponse(SetCustomActionResponse&& from) noexcept
    : SetCustomActionResponse() {
    *this = ::std::move(from);
  }

  inline SetCustomActionResponse& operator=(const SetCustomActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetCustomActionResponse& operator=(SetCustomActionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetCustomActionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetCustomActionResponse* internal_default_instance() {
    return reinterpret_cast<const SetCustomActionResponse*>(
               &_SetCustomActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetCustomActionResponse& a, SetCustomActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetCustomActionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetCustomActionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetCustomActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetCustomActionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetCustomActionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SetCustomActionResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCustomActionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.SetCustomActionResponse";
  }
  protected:
  explicit SetCustomActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomActionResultFieldNumber = 1,
  };
  // .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
  bool has_custom_action_result() const;
  private:
  bool _internal_has_custom_action_result() const;
  public:
  void clear_custom_action_result();
  const ::mavsdk::rpc::custom_action::CustomActionResult& custom_action_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::CustomActionResult* release_custom_action_result();
  ::mavsdk::rpc::custom_action::CustomActionResult* mutable_custom_action_result();
  void set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  private:
  const ::mavsdk::rpc::custom_action::CustomActionResult& _internal_custom_action_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* _internal_mutable_custom_action_result();
  public:
  void unsafe_arena_set_allocated_custom_action_result(
      ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  ::mavsdk::rpc::custom_action::CustomActionResult* unsafe_arena_release_custom_action_result();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.SetCustomActionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class SubscribeCustomActionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.SubscribeCustomActionRequest) */ {
 public:
  inline SubscribeCustomActionRequest() : SubscribeCustomActionRequest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR SubscribeCustomActionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SubscribeCustomActionRequest(const SubscribeCustomActionRequest& from);
  SubscribeCustomActionRequest(SubscribeCustomActionRequest&& from) noexcept
    : SubscribeCustomActionRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeCustomActionRequest& operator=(const SubscribeCustomActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeCustomActionRequest& operator=(SubscribeCustomActionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeCustomActionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeCustomActionRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeCustomActionRequest*>(
               &_SubscribeCustomActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SubscribeCustomActionRequest& a, SubscribeCustomActionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeCustomActionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeCustomActionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeCustomActionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeCustomActionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeCustomActionRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeCustomActionRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.SubscribeCustomActionRequest";
  }
  protected:
  explicit SubscribeCustomActionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.SubscribeCustomActionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class CustomActionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.CustomActionResponse) */ {
 public:
  inline CustomActionResponse() : CustomActionResponse(nullptr) {}
  ~CustomActionResponse() override;
  explicit PROTOBUF_CONSTEXPR CustomActionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomActionResponse(const CustomActionResponse& from);
  CustomActionResponse(CustomActionResponse&& from) noexcept
    : CustomActionResponse() {
    *this = ::std::move(from);
  }

  inline CustomActionResponse& operator=(const CustomActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomActionResponse& operator=(CustomActionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomActionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomActionResponse* internal_default_instance() {
    return reinterpret_cast<const CustomActionResponse*>(
               &_CustomActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CustomActionResponse& a, CustomActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomActionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomActionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomActionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CustomActionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CustomActionResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomActionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.CustomActionResponse";
  }
  protected:
  explicit CustomActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionToExecuteFieldNumber = 1,
  };
  // .mavsdk.rpc.custom_action.ActionToExecute action_to_execute = 1;
  bool has_action_to_execute() const;
  private:
  bool _internal_has_action_to_execute() const;
  public:
  void clear_action_to_execute();
  const ::mavsdk::rpc::custom_action::ActionToExecute& action_to_execute() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::ActionToExecute* release_action_to_execute();
  ::mavsdk::rpc::custom_action::ActionToExecute* mutable_action_to_execute();
  void set_allocated_action_to_execute(::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute);
  private:
  const ::mavsdk::rpc::custom_action::ActionToExecute& _internal_action_to_execute() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* _internal_mutable_action_to_execute();
  public:
  void unsafe_arena_set_allocated_action_to_execute(
      ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute);
  ::mavsdk::rpc::custom_action::ActionToExecute* unsafe_arena_release_action_to_execute();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.CustomActionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class RespondCustomActionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.RespondCustomActionRequest) */ {
 public:
  inline RespondCustomActionRequest() : RespondCustomActionRequest(nullptr) {}
  ~RespondCustomActionRequest() override;
  explicit PROTOBUF_CONSTEXPR RespondCustomActionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespondCustomActionRequest(const RespondCustomActionRequest& from);
  RespondCustomActionRequest(RespondCustomActionRequest&& from) noexcept
    : RespondCustomActionRequest() {
    *this = ::std::move(from);
  }

  inline RespondCustomActionRequest& operator=(const RespondCustomActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondCustomActionRequest& operator=(RespondCustomActionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondCustomActionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondCustomActionRequest* internal_default_instance() {
    return reinterpret_cast<const RespondCustomActionRequest*>(
               &_RespondCustomActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RespondCustomActionRequest& a, RespondCustomActionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondCustomActionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondCustomActionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondCustomActionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondCustomActionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespondCustomActionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespondCustomActionRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespondCustomActionRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.RespondCustomActionRequest";
  }
  protected:
  explicit RespondCustomActionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionToExecuteFieldNumber = 1,
    kCustomActionResultFieldNumber = 2,
  };
  // .mavsdk.rpc.custom_action.ActionToExecute action_to_execute = 1;
  bool has_action_to_execute() const;
  private:
  bool _internal_has_action_to_execute() const;
  public:
  void clear_action_to_execute();
  const ::mavsdk::rpc::custom_action::ActionToExecute& action_to_execute() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::ActionToExecute* release_action_to_execute();
  ::mavsdk::rpc::custom_action::ActionToExecute* mutable_action_to_execute();
  void set_allocated_action_to_execute(::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute);
  private:
  const ::mavsdk::rpc::custom_action::ActionToExecute& _internal_action_to_execute() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* _internal_mutable_action_to_execute();
  public:
  void unsafe_arena_set_allocated_action_to_execute(
      ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute);
  ::mavsdk::rpc::custom_action::ActionToExecute* unsafe_arena_release_action_to_execute();

  // .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 2;
  bool has_custom_action_result() const;
  private:
  bool _internal_has_custom_action_result() const;
  public:
  void clear_custom_action_result();
  const ::mavsdk::rpc::custom_action::CustomActionResult& custom_action_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::CustomActionResult* release_custom_action_result();
  ::mavsdk::rpc::custom_action::CustomActionResult* mutable_custom_action_result();
  void set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  private:
  const ::mavsdk::rpc::custom_action::CustomActionResult& _internal_custom_action_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* _internal_mutable_custom_action_result();
  public:
  void unsafe_arena_set_allocated_custom_action_result(
      ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  ::mavsdk::rpc::custom_action::CustomActionResult* unsafe_arena_release_custom_action_result();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.RespondCustomActionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute_;
  ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class RespondCustomActionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.RespondCustomActionResponse) */ {
 public:
  inline RespondCustomActionResponse() : RespondCustomActionResponse(nullptr) {}
  ~RespondCustomActionResponse() override;
  explicit PROTOBUF_CONSTEXPR RespondCustomActionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RespondCustomActionResponse(const RespondCustomActionResponse& from);
  RespondCustomActionResponse(RespondCustomActionResponse&& from) noexcept
    : RespondCustomActionResponse() {
    *this = ::std::move(from);
  }

  inline RespondCustomActionResponse& operator=(const RespondCustomActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondCustomActionResponse& operator=(RespondCustomActionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondCustomActionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondCustomActionResponse* internal_default_instance() {
    return reinterpret_cast<const RespondCustomActionResponse*>(
               &_RespondCustomActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RespondCustomActionResponse& a, RespondCustomActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondCustomActionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondCustomActionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondCustomActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondCustomActionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RespondCustomActionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RespondCustomActionResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespondCustomActionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.RespondCustomActionResponse";
  }
  protected:
  explicit RespondCustomActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomActionResultFieldNumber = 1,
  };
  // .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
  bool has_custom_action_result() const;
  private:
  bool _internal_has_custom_action_result() const;
  public:
  void clear_custom_action_result();
  const ::mavsdk::rpc::custom_action::CustomActionResult& custom_action_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::CustomActionResult* release_custom_action_result();
  ::mavsdk::rpc::custom_action::CustomActionResult* mutable_custom_action_result();
  void set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  private:
  const ::mavsdk::rpc::custom_action::CustomActionResult& _internal_custom_action_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* _internal_mutable_custom_action_result();
  public:
  void unsafe_arena_set_allocated_custom_action_result(
      ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  ::mavsdk::rpc::custom_action::CustomActionResult* unsafe_arena_release_custom_action_result();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.RespondCustomActionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class SubscribeCustomActionCancellationRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.SubscribeCustomActionCancellationRequest) */ {
 public:
  inline SubscribeCustomActionCancellationRequest() : SubscribeCustomActionCancellationRequest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR SubscribeCustomActionCancellationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SubscribeCustomActionCancellationRequest(const SubscribeCustomActionCancellationRequest& from);
  SubscribeCustomActionCancellationRequest(SubscribeCustomActionCancellationRequest&& from) noexcept
    : SubscribeCustomActionCancellationRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeCustomActionCancellationRequest& operator=(const SubscribeCustomActionCancellationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeCustomActionCancellationRequest& operator=(SubscribeCustomActionCancellationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeCustomActionCancellationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeCustomActionCancellationRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeCustomActionCancellationRequest*>(
               &_SubscribeCustomActionCancellationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SubscribeCustomActionCancellationRequest& a, SubscribeCustomActionCancellationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeCustomActionCancellationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeCustomActionCancellationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeCustomActionCancellationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeCustomActionCancellationRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeCustomActionCancellationRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeCustomActionCancellationRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.SubscribeCustomActionCancellationRequest";
  }
  protected:
  explicit SubscribeCustomActionCancellationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.SubscribeCustomActionCancellationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class CustomActionCancellationResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.CustomActionCancellationResponse) */ {
 public:
  inline CustomActionCancellationResponse() : CustomActionCancellationResponse(nullptr) {}
  ~CustomActionCancellationResponse() override;
  explicit PROTOBUF_CONSTEXPR CustomActionCancellationResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomActionCancellationResponse(const CustomActionCancellationResponse& from);
  CustomActionCancellationResponse(CustomActionCancellationResponse&& from) noexcept
    : CustomActionCancellationResponse() {
    *this = ::std::move(from);
  }

  inline CustomActionCancellationResponse& operator=(const CustomActionCancellationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomActionCancellationResponse& operator=(CustomActionCancellationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomActionCancellationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomActionCancellationResponse* internal_default_instance() {
    return reinterpret_cast<const CustomActionCancellationResponse*>(
               &_CustomActionCancellationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CustomActionCancellationResponse& a, CustomActionCancellationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomActionCancellationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomActionCancellationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomActionCancellationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomActionCancellationResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CustomActionCancellationResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CustomActionCancellationResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomActionCancellationResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.CustomActionCancellationResponse";
  }
  protected:
  explicit CustomActionCancellationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCancelFieldNumber = 1,
  };
  // bool cancel = 1;
  void clear_cancel();
  bool cancel() const;
  void set_cancel(bool value);
  private:
  bool _internal_cancel() const;
  void _internal_set_cancel(bool value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.CustomActionCancellationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool cancel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class CustomActionMetadataRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.CustomActionMetadataRequest) */ {
 public:
  inline CustomActionMetadataRequest() : CustomActionMetadataRequest(nullptr) {}
  ~CustomActionMetadataRequest() override;
  explicit PROTOBUF_CONSTEXPR CustomActionMetadataRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomActionMetadataRequest(const CustomActionMetadataRequest& from);
  CustomActionMetadataRequest(CustomActionMetadataRequest&& from) noexcept
    : CustomActionMetadataRequest() {
    *this = ::std::move(from);
  }

  inline CustomActionMetadataRequest& operator=(const CustomActionMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomActionMetadataRequest& operator=(CustomActionMetadataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomActionMetadataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomActionMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const CustomActionMetadataRequest*>(
               &_CustomActionMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CustomActionMetadataRequest& a, CustomActionMetadataRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomActionMetadataRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomActionMetadataRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomActionMetadataRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomActionMetadataRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CustomActionMetadataRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CustomActionMetadataRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomActionMetadataRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.CustomActionMetadataRequest";
  }
  protected:
  explicit CustomActionMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilePathFieldNumber = 2,
    kActionToExecuteFieldNumber = 1,
  };
  // string file_path = 2;
  void clear_file_path();
  const std::string& file_path() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_file_path(ArgT0&& arg0, ArgT... args);
  std::string* mutable_file_path();
  PROTOBUF_NODISCARD std::string* release_file_path();
  void set_allocated_file_path(std::string* file_path);
  private:
  const std::string& _internal_file_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_path(const std::string& value);
  std::string* _internal_mutable_file_path();
  public:

  // .mavsdk.rpc.custom_action.ActionToExecute action_to_execute = 1;
  bool has_action_to_execute() const;
  private:
  bool _internal_has_action_to_execute() const;
  public:
  void clear_action_to_execute();
  const ::mavsdk::rpc::custom_action::ActionToExecute& action_to_execute() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::ActionToExecute* release_action_to_execute();
  ::mavsdk::rpc::custom_action::ActionToExecute* mutable_action_to_execute();
  void set_allocated_action_to_execute(::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute);
  private:
  const ::mavsdk::rpc::custom_action::ActionToExecute& _internal_action_to_execute() const;
  ::mavsdk::rpc::custom_action::ActionToExecute* _internal_mutable_action_to_execute();
  public:
  void unsafe_arena_set_allocated_action_to_execute(
      ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute);
  ::mavsdk::rpc::custom_action::ActionToExecute* unsafe_arena_release_action_to_execute();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.CustomActionMetadataRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_path_;
  ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class CustomActionMetadataResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.CustomActionMetadataResponse) */ {
 public:
  inline CustomActionMetadataResponse() : CustomActionMetadataResponse(nullptr) {}
  ~CustomActionMetadataResponse() override;
  explicit PROTOBUF_CONSTEXPR CustomActionMetadataResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomActionMetadataResponse(const CustomActionMetadataResponse& from);
  CustomActionMetadataResponse(CustomActionMetadataResponse&& from) noexcept
    : CustomActionMetadataResponse() {
    *this = ::std::move(from);
  }

  inline CustomActionMetadataResponse& operator=(const CustomActionMetadataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomActionMetadataResponse& operator=(CustomActionMetadataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomActionMetadataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomActionMetadataResponse* internal_default_instance() {
    return reinterpret_cast<const CustomActionMetadataResponse*>(
               &_CustomActionMetadataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CustomActionMetadataResponse& a, CustomActionMetadataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomActionMetadataResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomActionMetadataResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomActionMetadataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomActionMetadataResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CustomActionMetadataResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CustomActionMetadataResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomActionMetadataResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.CustomActionMetadataResponse";
  }
  protected:
  explicit CustomActionMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionMetadataFieldNumber = 1,
    kCustomActionResultFieldNumber = 2,
  };
  // .mavsdk.rpc.custom_action.ActionMetadata action_metadata = 1;
  bool has_action_metadata() const;
  private:
  bool _internal_has_action_metadata() const;
  public:
  void clear_action_metadata();
  const ::mavsdk::rpc::custom_action::ActionMetadata& action_metadata() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::ActionMetadata* release_action_metadata();
  ::mavsdk::rpc::custom_action::ActionMetadata* mutable_action_metadata();
  void set_allocated_action_metadata(::mavsdk::rpc::custom_action::ActionMetadata* action_metadata);
  private:
  const ::mavsdk::rpc::custom_action::ActionMetadata& _internal_action_metadata() const;
  ::mavsdk::rpc::custom_action::ActionMetadata* _internal_mutable_action_metadata();
  public:
  void unsafe_arena_set_allocated_action_metadata(
      ::mavsdk::rpc::custom_action::ActionMetadata* action_metadata);
  ::mavsdk::rpc::custom_action::ActionMetadata* unsafe_arena_release_action_metadata();

  // .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 2;
  bool has_custom_action_result() const;
  private:
  bool _internal_has_custom_action_result() const;
  public:
  void clear_custom_action_result();
  const ::mavsdk::rpc::custom_action::CustomActionResult& custom_action_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::CustomActionResult* release_custom_action_result();
  ::mavsdk::rpc::custom_action::CustomActionResult* mutable_custom_action_result();
  void set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  private:
  const ::mavsdk::rpc::custom_action::CustomActionResult& _internal_custom_action_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* _internal_mutable_custom_action_result();
  public:
  void unsafe_arena_set_allocated_custom_action_result(
      ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  ::mavsdk::rpc::custom_action::CustomActionResult* unsafe_arena_release_custom_action_result();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.CustomActionMetadataResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::custom_action::ActionMetadata* action_metadata_;
  ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class ExecuteCustomActionStageRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.ExecuteCustomActionStageRequest) */ {
 public:
  inline ExecuteCustomActionStageRequest() : ExecuteCustomActionStageRequest(nullptr) {}
  ~ExecuteCustomActionStageRequest() override;
  explicit PROTOBUF_CONSTEXPR ExecuteCustomActionStageRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExecuteCustomActionStageRequest(const ExecuteCustomActionStageRequest& from);
  ExecuteCustomActionStageRequest(ExecuteCustomActionStageRequest&& from) noexcept
    : ExecuteCustomActionStageRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteCustomActionStageRequest& operator=(const ExecuteCustomActionStageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecuteCustomActionStageRequest& operator=(ExecuteCustomActionStageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecuteCustomActionStageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecuteCustomActionStageRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteCustomActionStageRequest*>(
               &_ExecuteCustomActionStageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ExecuteCustomActionStageRequest& a, ExecuteCustomActionStageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExecuteCustomActionStageRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecuteCustomActionStageRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecuteCustomActionStageRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExecuteCustomActionStageRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ExecuteCustomActionStageRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ExecuteCustomActionStageRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteCustomActionStageRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.ExecuteCustomActionStageRequest";
  }
  protected:
  explicit ExecuteCustomActionStageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStageFieldNumber = 1,
  };
  // .mavsdk.rpc.custom_action.Stage stage = 1;
  bool has_stage() const;
  private:
  bool _internal_has_stage() const;
  public:
  void clear_stage();
  const ::mavsdk::rpc::custom_action::Stage& stage() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::Stage* release_stage();
  ::mavsdk::rpc::custom_action::Stage* mutable_stage();
  void set_allocated_stage(::mavsdk::rpc::custom_action::Stage* stage);
  private:
  const ::mavsdk::rpc::custom_action::Stage& _internal_stage() const;
  ::mavsdk::rpc::custom_action::Stage* _internal_mutable_stage();
  public:
  void unsafe_arena_set_allocated_stage(
      ::mavsdk::rpc::custom_action::Stage* stage);
  ::mavsdk::rpc::custom_action::Stage* unsafe_arena_release_stage();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.ExecuteCustomActionStageRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::custom_action::Stage* stage_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class ExecuteCustomActionStageResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.ExecuteCustomActionStageResponse) */ {
 public:
  inline ExecuteCustomActionStageResponse() : ExecuteCustomActionStageResponse(nullptr) {}
  ~ExecuteCustomActionStageResponse() override;
  explicit PROTOBUF_CONSTEXPR ExecuteCustomActionStageResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExecuteCustomActionStageResponse(const ExecuteCustomActionStageResponse& from);
  ExecuteCustomActionStageResponse(ExecuteCustomActionStageResponse&& from) noexcept
    : ExecuteCustomActionStageResponse() {
    *this = ::std::move(from);
  }

  inline ExecuteCustomActionStageResponse& operator=(const ExecuteCustomActionStageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecuteCustomActionStageResponse& operator=(ExecuteCustomActionStageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecuteCustomActionStageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecuteCustomActionStageResponse* internal_default_instance() {
    return reinterpret_cast<const ExecuteCustomActionStageResponse*>(
               &_ExecuteCustomActionStageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ExecuteCustomActionStageResponse& a, ExecuteCustomActionStageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ExecuteCustomActionStageResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecuteCustomActionStageResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecuteCustomActionStageResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExecuteCustomActionStageResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ExecuteCustomActionStageResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ExecuteCustomActionStageResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteCustomActionStageResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.ExecuteCustomActionStageResponse";
  }
  protected:
  explicit ExecuteCustomActionStageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomActionResultFieldNumber = 1,
  };
  // .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
  bool has_custom_action_result() const;
  private:
  bool _internal_has_custom_action_result() const;
  public:
  void clear_custom_action_result();
  const ::mavsdk::rpc::custom_action::CustomActionResult& custom_action_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::CustomActionResult* release_custom_action_result();
  ::mavsdk::rpc::custom_action::CustomActionResult* mutable_custom_action_result();
  void set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  private:
  const ::mavsdk::rpc::custom_action::CustomActionResult& _internal_custom_action_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* _internal_mutable_custom_action_result();
  public:
  void unsafe_arena_set_allocated_custom_action_result(
      ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  ::mavsdk::rpc::custom_action::CustomActionResult* unsafe_arena_release_custom_action_result();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.ExecuteCustomActionStageResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class ExecuteCustomActionGlobalScriptRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptRequest) */ {
 public:
  inline ExecuteCustomActionGlobalScriptRequest() : ExecuteCustomActionGlobalScriptRequest(nullptr) {}
  ~ExecuteCustomActionGlobalScriptRequest() override;
  explicit PROTOBUF_CONSTEXPR ExecuteCustomActionGlobalScriptRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExecuteCustomActionGlobalScriptRequest(const ExecuteCustomActionGlobalScriptRequest& from);
  ExecuteCustomActionGlobalScriptRequest(ExecuteCustomActionGlobalScriptRequest&& from) noexcept
    : ExecuteCustomActionGlobalScriptRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteCustomActionGlobalScriptRequest& operator=(const ExecuteCustomActionGlobalScriptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecuteCustomActionGlobalScriptRequest& operator=(ExecuteCustomActionGlobalScriptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecuteCustomActionGlobalScriptRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecuteCustomActionGlobalScriptRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteCustomActionGlobalScriptRequest*>(
               &_ExecuteCustomActionGlobalScriptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ExecuteCustomActionGlobalScriptRequest& a, ExecuteCustomActionGlobalScriptRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExecuteCustomActionGlobalScriptRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecuteCustomActionGlobalScriptRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecuteCustomActionGlobalScriptRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExecuteCustomActionGlobalScriptRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ExecuteCustomActionGlobalScriptRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ExecuteCustomActionGlobalScriptRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteCustomActionGlobalScriptRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptRequest";
  }
  protected:
  explicit ExecuteCustomActionGlobalScriptRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGlobalScriptFieldNumber = 1,
  };
  // string global_script = 1;
  void clear_global_script();
  const std::string& global_script() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_global_script(ArgT0&& arg0, ArgT... args);
  std::string* mutable_global_script();
  PROTOBUF_NODISCARD std::string* release_global_script();
  void set_allocated_global_script(std::string* global_script);
  private:
  const std::string& _internal_global_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_global_script(const std::string& value);
  std::string* _internal_mutable_global_script();
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr global_script_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class ExecuteCustomActionGlobalScriptResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptResponse) */ {
 public:
  inline ExecuteCustomActionGlobalScriptResponse() : ExecuteCustomActionGlobalScriptResponse(nullptr) {}
  ~ExecuteCustomActionGlobalScriptResponse() override;
  explicit PROTOBUF_CONSTEXPR ExecuteCustomActionGlobalScriptResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExecuteCustomActionGlobalScriptResponse(const ExecuteCustomActionGlobalScriptResponse& from);
  ExecuteCustomActionGlobalScriptResponse(ExecuteCustomActionGlobalScriptResponse&& from) noexcept
    : ExecuteCustomActionGlobalScriptResponse() {
    *this = ::std::move(from);
  }

  inline ExecuteCustomActionGlobalScriptResponse& operator=(const ExecuteCustomActionGlobalScriptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecuteCustomActionGlobalScriptResponse& operator=(ExecuteCustomActionGlobalScriptResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecuteCustomActionGlobalScriptResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecuteCustomActionGlobalScriptResponse* internal_default_instance() {
    return reinterpret_cast<const ExecuteCustomActionGlobalScriptResponse*>(
               &_ExecuteCustomActionGlobalScriptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ExecuteCustomActionGlobalScriptResponse& a, ExecuteCustomActionGlobalScriptResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ExecuteCustomActionGlobalScriptResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecuteCustomActionGlobalScriptResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecuteCustomActionGlobalScriptResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExecuteCustomActionGlobalScriptResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ExecuteCustomActionGlobalScriptResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ExecuteCustomActionGlobalScriptResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteCustomActionGlobalScriptResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptResponse";
  }
  protected:
  explicit ExecuteCustomActionGlobalScriptResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomActionResultFieldNumber = 1,
  };
  // .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
  bool has_custom_action_result() const;
  private:
  bool _internal_has_custom_action_result() const;
  public:
  void clear_custom_action_result();
  const ::mavsdk::rpc::custom_action::CustomActionResult& custom_action_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::CustomActionResult* release_custom_action_result();
  ::mavsdk::rpc::custom_action::CustomActionResult* mutable_custom_action_result();
  void set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  private:
  const ::mavsdk::rpc::custom_action::CustomActionResult& _internal_custom_action_result() const;
  ::mavsdk::rpc::custom_action::CustomActionResult* _internal_mutable_custom_action_result();
  public:
  void unsafe_arena_set_allocated_custom_action_result(
      ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result);
  ::mavsdk::rpc::custom_action::CustomActionResult* unsafe_arena_release_custom_action_result();

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class ActionToExecute final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.ActionToExecute) */ {
 public:
  inline ActionToExecute() : ActionToExecute(nullptr) {}
  ~ActionToExecute() override;
  explicit PROTOBUF_CONSTEXPR ActionToExecute(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ActionToExecute(const ActionToExecute& from);
  ActionToExecute(ActionToExecute&& from) noexcept
    : ActionToExecute() {
    *this = ::std::move(from);
  }

  inline ActionToExecute& operator=(const ActionToExecute& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActionToExecute& operator=(ActionToExecute&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActionToExecute& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActionToExecute* internal_default_instance() {
    return reinterpret_cast<const ActionToExecute*>(
               &_ActionToExecute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ActionToExecute& a, ActionToExecute& b) {
    a.Swap(&b);
  }
  inline void Swap(ActionToExecute* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActionToExecute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActionToExecute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ActionToExecute>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ActionToExecute& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ActionToExecute& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionToExecute* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.ActionToExecute";
  }
  protected:
  explicit ActionToExecute(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeoutFieldNumber = 2,
    kProgressFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // double timeout = 2;
  void clear_timeout();
  double timeout() const;
  void set_timeout(double value);
  private:
  double _internal_timeout() const;
  void _internal_set_timeout(double value);
  public:

  // double progress = 3;
  void clear_progress();
  double progress() const;
  void set_progress(double value);
  private:
  double _internal_progress() const;
  void _internal_set_progress(double value);
  public:

  // uint32 id = 1;
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.ActionToExecute)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double timeout_;
  double progress_;
  uint32_t id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class Command final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.Command) */ {
 public:
  inline Command() : Command(nullptr) {}
  ~Command() override;
  explicit PROTOBUF_CONSTEXPR Command(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Command(const Command& from);
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  inline Command& operator=(Command&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Command& default_instance() {
    return *internal_default_instance();
  }
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }
  inline void Swap(Command* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Command* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Command* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Command& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Command& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.Command";
  }
  protected:
  explicit Command(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Command_CommandType CommandType;
  static constexpr CommandType COMMAND_TYPE_LONG =
    Command_CommandType_COMMAND_TYPE_LONG;
  static constexpr CommandType COMMAND_TYPE_INT =
    Command_CommandType_COMMAND_TYPE_INT;
  static inline bool CommandType_IsValid(int value) {
    return Command_CommandType_IsValid(value);
  }
  static constexpr CommandType CommandType_MIN =
    Command_CommandType_CommandType_MIN;
  static constexpr CommandType CommandType_MAX =
    Command_CommandType_CommandType_MAX;
  static constexpr int CommandType_ARRAYSIZE =
    Command_CommandType_CommandType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  CommandType_descriptor() {
    return Command_CommandType_descriptor();
  }
  template<typename T>
  static inline const std::string& CommandType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, CommandType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function CommandType_Name.");
    return Command_CommandType_Name(enum_t_value);
  }
  static inline bool CommandType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      CommandType* value) {
    return Command_CommandType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kTargetSystemIdFieldNumber = 2,
    kTargetComponentIdFieldNumber = 3,
    kFrameFieldNumber = 4,
    kParam1FieldNumber = 6,
    kParam2FieldNumber = 7,
    kParam3FieldNumber = 8,
    kParam4FieldNumber = 9,
    kCommandFieldNumber = 5,
    kIsLocalFieldNumber = 13,
    kParam5FieldNumber = 10,
    kParam6FieldNumber = 11,
    kParam7FieldNumber = 12,
  };
  // .mavsdk.rpc.custom_action.Command.CommandType type = 1;
  void clear_type();
  ::mavsdk::rpc::custom_action::Command_CommandType type() const;
  void set_type(::mavsdk::rpc::custom_action::Command_CommandType value);
  private:
  ::mavsdk::rpc::custom_action::Command_CommandType _internal_type() const;
  void _internal_set_type(::mavsdk::rpc::custom_action::Command_CommandType value);
  public:

  // uint32 target_system_id = 2;
  void clear_target_system_id();
  uint32_t target_system_id() const;
  void set_target_system_id(uint32_t value);
  private:
  uint32_t _internal_target_system_id() const;
  void _internal_set_target_system_id(uint32_t value);
  public:

  // uint32 target_component_id = 3;
  void clear_target_component_id();
  uint32_t target_component_id() const;
  void set_target_component_id(uint32_t value);
  private:
  uint32_t _internal_target_component_id() const;
  void _internal_set_target_component_id(uint32_t value);
  public:

  // uint32 frame = 4;
  void clear_frame();
  uint32_t frame() const;
  void set_frame(uint32_t value);
  private:
  uint32_t _internal_frame() const;
  void _internal_set_frame(uint32_t value);
  public:

  // double param1 = 6;
  void clear_param1();
  double param1() const;
  void set_param1(double value);
  private:
  double _internal_param1() const;
  void _internal_set_param1(double value);
  public:

  // double param2 = 7;
  void clear_param2();
  double param2() const;
  void set_param2(double value);
  private:
  double _internal_param2() const;
  void _internal_set_param2(double value);
  public:

  // double param3 = 8;
  void clear_param3();
  double param3() const;
  void set_param3(double value);
  private:
  double _internal_param3() const;
  void _internal_set_param3(double value);
  public:

  // double param4 = 9;
  void clear_param4();
  double param4() const;
  void set_param4(double value);
  private:
  double _internal_param4() const;
  void _internal_set_param4(double value);
  public:

  // uint32 command = 5;
  void clear_command();
  uint32_t command() const;
  void set_command(uint32_t value);
  private:
  uint32_t _internal_command() const;
  void _internal_set_command(uint32_t value);
  public:

  // bool is_local = 13;
  void clear_is_local();
  bool is_local() const;
  void set_is_local(bool value);
  private:
  bool _internal_is_local() const;
  void _internal_set_is_local(bool value);
  public:

  // double param5 = 10;
  void clear_param5();
  double param5() const;
  void set_param5(double value);
  private:
  double _internal_param5() const;
  void _internal_set_param5(double value);
  public:

  // double param6 = 11;
  void clear_param6();
  double param6() const;
  void set_param6(double value);
  private:
  double _internal_param6() const;
  void _internal_set_param6(double value);
  public:

  // double param7 = 12;
  void clear_param7();
  double param7() const;
  void set_param7(double value);
  private:
  double _internal_param7() const;
  void _internal_set_param7(double value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.Command)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  uint32_t target_system_id_;
  uint32_t target_component_id_;
  uint32_t frame_;
  double param1_;
  double param2_;
  double param3_;
  double param4_;
  uint32_t command_;
  bool is_local_;
  double param5_;
  double param6_;
  double param7_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class Parameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.Parameter) */ {
 public:
  inline Parameter() : Parameter(nullptr) {}
  ~Parameter() override;
  explicit PROTOBUF_CONSTEXPR Parameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Parameter(const Parameter& from);
  Parameter(Parameter&& from) noexcept
    : Parameter() {
    *this = ::std::move(from);
  }

  inline Parameter& operator=(const Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline Parameter& operator=(Parameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Parameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const Parameter* internal_default_instance() {
    return reinterpret_cast<const Parameter*>(
               &_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(Parameter& a, Parameter& b) {
    a.Swap(&b);
  }
  inline void Swap(Parameter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Parameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Parameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Parameter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Parameter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Parameter& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Parameter* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.Parameter";
  }
  protected:
  explicit Parameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Parameter_ParameterType ParameterType;
  static constexpr ParameterType PARAMETER_TYPE_INT =
    Parameter_ParameterType_PARAMETER_TYPE_INT;
  static constexpr ParameterType PARAMETER_TYPE_FLOAT =
    Parameter_ParameterType_PARAMETER_TYPE_FLOAT;
  static inline bool ParameterType_IsValid(int value) {
    return Parameter_ParameterType_IsValid(value);
  }
  static constexpr ParameterType ParameterType_MIN =
    Parameter_ParameterType_ParameterType_MIN;
  static constexpr ParameterType ParameterType_MAX =
    Parameter_ParameterType_ParameterType_MAX;
  static constexpr int ParameterType_ARRAYSIZE =
    Parameter_ParameterType_ParameterType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ParameterType_descriptor() {
    return Parameter_ParameterType_descriptor();
  }
  template<typename T>
  static inline const std::string& ParameterType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ParameterType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ParameterType_Name.");
    return Parameter_ParameterType_Name(enum_t_value);
  }
  static inline bool ParameterType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ParameterType* value) {
    return Parameter_ParameterType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kTypeFieldNumber = 1,
    kValueFieldNumber = 3,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .mavsdk.rpc.custom_action.Parameter.ParameterType type = 1;
  void clear_type();
  ::mavsdk::rpc::custom_action::Parameter_ParameterType type() const;
  void set_type(::mavsdk::rpc::custom_action::Parameter_ParameterType value);
  private:
  ::mavsdk::rpc::custom_action::Parameter_ParameterType _internal_type() const;
  void _internal_set_type(::mavsdk::rpc::custom_action::Parameter_ParameterType value);
  public:

  // float value = 3;
  void clear_value();
  float value() const;
  void set_value(float value);
  private:
  float _internal_value() const;
  void _internal_set_value(float value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.Parameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  int type_;
  float value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class Stage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.Stage) */ {
 public:
  inline Stage() : Stage(nullptr) {}
  ~Stage() override;
  explicit PROTOBUF_CONSTEXPR Stage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Stage(const Stage& from);
  Stage(Stage&& from) noexcept
    : Stage() {
    *this = ::std::move(from);
  }

  inline Stage& operator=(const Stage& from) {
    CopyFrom(from);
    return *this;
  }
  inline Stage& operator=(Stage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Stage& default_instance() {
    return *internal_default_instance();
  }
  static inline const Stage* internal_default_instance() {
    return reinterpret_cast<const Stage*>(
               &_Stage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Stage& a, Stage& b) {
    a.Swap(&b);
  }
  inline void Swap(Stage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Stage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Stage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Stage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Stage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Stage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Stage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.Stage";
  }
  protected:
  explicit Stage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Stage_StateTransitionCondition StateTransitionCondition;
  static constexpr StateTransitionCondition STATE_TRANSITION_CONDITION_ON_RESULT_SUCCESS =
    Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_RESULT_SUCCESS;
  static constexpr StateTransitionCondition STATE_TRANSITION_CONDITION_ON_TIMEOUT =
    Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_TIMEOUT;
  static constexpr StateTransitionCondition STATE_TRANSITION_CONDITION_ON_LANDING_COMPLETE =
    Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_LANDING_COMPLETE;
  static constexpr StateTransitionCondition STATE_TRANSITION_CONDITION_ON_TAKEOFF_COMPLETE =
    Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_TAKEOFF_COMPLETE;
  static constexpr StateTransitionCondition STATE_TRANSITION_CONDITION_ON_MODE_CHANGE =
    Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_MODE_CHANGE;
  static constexpr StateTransitionCondition STATE_TRANSITION_CONDITION_ON_CUSTOM_CONDITION_TRUE =
    Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_CUSTOM_CONDITION_TRUE;
  static constexpr StateTransitionCondition STATE_TRANSITION_CONDITION_ON_CUSTOM_CONDITION_FALSE =
    Stage_StateTransitionCondition_STATE_TRANSITION_CONDITION_ON_CUSTOM_CONDITION_FALSE;
  static inline bool StateTransitionCondition_IsValid(int value) {
    return Stage_StateTransitionCondition_IsValid(value);
  }
  static constexpr StateTransitionCondition StateTransitionCondition_MIN =
    Stage_StateTransitionCondition_StateTransitionCondition_MIN;
  static constexpr StateTransitionCondition StateTransitionCondition_MAX =
    Stage_StateTransitionCondition_StateTransitionCondition_MAX;
  static constexpr int StateTransitionCondition_ARRAYSIZE =
    Stage_StateTransitionCondition_StateTransitionCondition_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  StateTransitionCondition_descriptor() {
    return Stage_StateTransitionCondition_descriptor();
  }
  template<typename T>
  static inline const std::string& StateTransitionCondition_Name(T enum_t_value) {
    static_assert(::std::is_same<T, StateTransitionCondition>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function StateTransitionCondition_Name.");
    return Stage_StateTransitionCondition_Name(enum_t_value);
  }
  static inline bool StateTransitionCondition_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      StateTransitionCondition* value) {
    return Stage_StateTransitionCondition_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kScriptFieldNumber = 2,
    kCommandFieldNumber = 1,
    kParameterSetFieldNumber = 3,
    kTimeoutFieldNumber = 5,
    kStateTransitionConditionFieldNumber = 4,
  };
  // string script = 2;
  void clear_script();
  const std::string& script() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_script(ArgT0&& arg0, ArgT... args);
  std::string* mutable_script();
  PROTOBUF_NODISCARD std::string* release_script();
  void set_allocated_script(std::string* script);
  private:
  const std::string& _internal_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_script(const std::string& value);
  std::string* _internal_mutable_script();
  public:

  // .mavsdk.rpc.custom_action.Command command = 1;
  bool has_command() const;
  private:
  bool _internal_has_command() const;
  public:
  void clear_command();
  const ::mavsdk::rpc::custom_action::Command& command() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::Command* release_command();
  ::mavsdk::rpc::custom_action::Command* mutable_command();
  void set_allocated_command(::mavsdk::rpc::custom_action::Command* command);
  private:
  const ::mavsdk::rpc::custom_action::Command& _internal_command() const;
  ::mavsdk::rpc::custom_action::Command* _internal_mutable_command();
  public:
  void unsafe_arena_set_allocated_command(
      ::mavsdk::rpc::custom_action::Command* command);
  ::mavsdk::rpc::custom_action::Command* unsafe_arena_release_command();

  // .mavsdk.rpc.custom_action.Parameter parameter_set = 3;
  bool has_parameter_set() const;
  private:
  bool _internal_has_parameter_set() const;
  public:
  void clear_parameter_set();
  const ::mavsdk::rpc::custom_action::Parameter& parameter_set() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::custom_action::Parameter* release_parameter_set();
  ::mavsdk::rpc::custom_action::Parameter* mutable_parameter_set();
  void set_allocated_parameter_set(::mavsdk::rpc::custom_action::Parameter* parameter_set);
  private:
  const ::mavsdk::rpc::custom_action::Parameter& _internal_parameter_set() const;
  ::mavsdk::rpc::custom_action::Parameter* _internal_mutable_parameter_set();
  public:
  void unsafe_arena_set_allocated_parameter_set(
      ::mavsdk::rpc::custom_action::Parameter* parameter_set);
  ::mavsdk::rpc::custom_action::Parameter* unsafe_arena_release_parameter_set();

  // double timeout = 5;
  void clear_timeout();
  double timeout() const;
  void set_timeout(double value);
  private:
  double _internal_timeout() const;
  void _internal_set_timeout(double value);
  public:

  // .mavsdk.rpc.custom_action.Stage.StateTransitionCondition state_transition_condition = 4;
  void clear_state_transition_condition();
  ::mavsdk::rpc::custom_action::Stage_StateTransitionCondition state_transition_condition() const;
  void set_state_transition_condition(::mavsdk::rpc::custom_action::Stage_StateTransitionCondition value);
  private:
  ::mavsdk::rpc::custom_action::Stage_StateTransitionCondition _internal_state_transition_condition() const;
  void _internal_set_state_transition_condition(::mavsdk::rpc::custom_action::Stage_StateTransitionCondition value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.Stage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr script_;
  ::mavsdk::rpc::custom_action::Command* command_;
  ::mavsdk::rpc::custom_action::Parameter* parameter_set_;
  double timeout_;
  int state_transition_condition_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class ActionMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.ActionMetadata) */ {
 public:
  inline ActionMetadata() : ActionMetadata(nullptr) {}
  ~ActionMetadata() override;
  explicit PROTOBUF_CONSTEXPR ActionMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ActionMetadata(const ActionMetadata& from);
  ActionMetadata(ActionMetadata&& from) noexcept
    : ActionMetadata() {
    *this = ::std::move(from);
  }

  inline ActionMetadata& operator=(const ActionMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActionMetadata& operator=(ActionMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActionMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActionMetadata* internal_default_instance() {
    return reinterpret_cast<const ActionMetadata*>(
               &_ActionMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ActionMetadata& a, ActionMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(ActionMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActionMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActionMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ActionMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ActionMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ActionMetadata& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.ActionMetadata";
  }
  protected:
  explicit ActionMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionMetadata_ActionCompleteCondition ActionCompleteCondition;
  static constexpr ActionCompleteCondition ACTION_COMPLETE_CONDITION_ON_LAST_STAGE_COMPLETE =
    ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_LAST_STAGE_COMPLETE;
  static constexpr ActionCompleteCondition ACTION_COMPLETE_CONDITION_ON_TIMEOUT =
    ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_TIMEOUT;
  static constexpr ActionCompleteCondition ACTION_COMPLETE_CONDITION_ON_RESULT_SUCCESS =
    ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_RESULT_SUCCESS;
  static constexpr ActionCompleteCondition ACTION_COMPLETE_CONDITION_ON_CUSTOM_CONDITION_TRUE =
    ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_CUSTOM_CONDITION_TRUE;
  static constexpr ActionCompleteCondition ACTION_COMPLETE_CONDITION_ON_CUSTOM_CONDITION_FALSE =
    ActionMetadata_ActionCompleteCondition_ACTION_COMPLETE_CONDITION_ON_CUSTOM_CONDITION_FALSE;
  static inline bool ActionCompleteCondition_IsValid(int value) {
    return ActionMetadata_ActionCompleteCondition_IsValid(value);
  }
  static constexpr ActionCompleteCondition ActionCompleteCondition_MIN =
    ActionMetadata_ActionCompleteCondition_ActionCompleteCondition_MIN;
  static constexpr ActionCompleteCondition ActionCompleteCondition_MAX =
    ActionMetadata_ActionCompleteCondition_ActionCompleteCondition_MAX;
  static constexpr int ActionCompleteCondition_ARRAYSIZE =
    ActionMetadata_ActionCompleteCondition_ActionCompleteCondition_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ActionCompleteCondition_descriptor() {
    return ActionMetadata_ActionCompleteCondition_descriptor();
  }
  template<typename T>
  static inline const std::string& ActionCompleteCondition_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ActionCompleteCondition>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ActionCompleteCondition_Name.");
    return ActionMetadata_ActionCompleteCondition_Name(enum_t_value);
  }
  static inline bool ActionCompleteCondition_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ActionCompleteCondition* value) {
    return ActionMetadata_ActionCompleteCondition_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStagesFieldNumber = 7,
    kActionNameFieldNumber = 2,
    kActionDescriptionFieldNumber = 3,
    kGlobalScriptFieldNumber = 4,
    kIdFieldNumber = 1,
    kActionCompleteConditionFieldNumber = 6,
    kGlobalTimeoutFieldNumber = 5,
  };
  // repeated .mavsdk.rpc.custom_action.Stage stages = 7;
  int stages_size() const;
  private:
  int _internal_stages_size() const;
  public:
  void clear_stages();
  ::mavsdk::rpc::custom_action::Stage* mutable_stages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::custom_action::Stage >*
      mutable_stages();
  private:
  const ::mavsdk::rpc::custom_action::Stage& _internal_stages(int index) const;
  ::mavsdk::rpc::custom_action::Stage* _internal_add_stages();
  public:
  const ::mavsdk::rpc::custom_action::Stage& stages(int index) const;
  ::mavsdk::rpc::custom_action::Stage* add_stages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::custom_action::Stage >&
      stages() const;

  // string action_name = 2;
  void clear_action_name();
  const std::string& action_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_action_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_action_name();
  PROTOBUF_NODISCARD std::string* release_action_name();
  void set_allocated_action_name(std::string* action_name);
  private:
  const std::string& _internal_action_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_action_name(const std::string& value);
  std::string* _internal_mutable_action_name();
  public:

  // string action_description = 3;
  void clear_action_description();
  const std::string& action_description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_action_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_action_description();
  PROTOBUF_NODISCARD std::string* release_action_description();
  void set_allocated_action_description(std::string* action_description);
  private:
  const std::string& _internal_action_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_action_description(const std::string& value);
  std::string* _internal_mutable_action_description();
  public:

  // string global_script = 4;
  void clear_global_script();
  const std::string& global_script() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_global_script(ArgT0&& arg0, ArgT... args);
  std::string* mutable_global_script();
  PROTOBUF_NODISCARD std::string* release_global_script();
  void set_allocated_global_script(std::string* global_script);
  private:
  const std::string& _internal_global_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_global_script(const std::string& value);
  std::string* _internal_mutable_global_script();
  public:

  // uint32 id = 1;
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // .mavsdk.rpc.custom_action.ActionMetadata.ActionCompleteCondition action_complete_condition = 6;
  void clear_action_complete_condition();
  ::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition action_complete_condition() const;
  void set_action_complete_condition(::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition value);
  private:
  ::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition _internal_action_complete_condition() const;
  void _internal_set_action_complete_condition(::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition value);
  public:

  // double global_timeout = 5;
  void clear_global_timeout();
  double global_timeout() const;
  void set_global_timeout(double value);
  private:
  double _internal_global_timeout() const;
  void _internal_set_global_timeout(double value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.ActionMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::custom_action::Stage > stages_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr global_script_;
  uint32_t id_;
  int action_complete_condition_;
  double global_timeout_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// -------------------------------------------------------------------

class CustomActionResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.custom_action.CustomActionResult) */ {
 public:
  inline CustomActionResult() : CustomActionResult(nullptr) {}
  ~CustomActionResult() override;
  explicit PROTOBUF_CONSTEXPR CustomActionResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomActionResult(const CustomActionResult& from);
  CustomActionResult(CustomActionResult&& from) noexcept
    : CustomActionResult() {
    *this = ::std::move(from);
  }

  inline CustomActionResult& operator=(const CustomActionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomActionResult& operator=(CustomActionResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomActionResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomActionResult* internal_default_instance() {
    return reinterpret_cast<const CustomActionResult*>(
               &_CustomActionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CustomActionResult& a, CustomActionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomActionResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomActionResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomActionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomActionResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CustomActionResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CustomActionResult& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomActionResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mavsdk.rpc.custom_action.CustomActionResult";
  }
  protected:
  explicit CustomActionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CustomActionResult_Result Result;
  static constexpr Result RESULT_UNKNOWN =
    CustomActionResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS =
    CustomActionResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_ERROR =
    CustomActionResult_Result_RESULT_ERROR;
  static constexpr Result RESULT_TIMEOUT =
    CustomActionResult_Result_RESULT_TIMEOUT;
  static constexpr Result RESULT_UNSUPPORTED =
    CustomActionResult_Result_RESULT_UNSUPPORTED;
  static constexpr Result RESULT_IN_PROGRESS =
    CustomActionResult_Result_RESULT_IN_PROGRESS;
  static inline bool Result_IsValid(int value) {
    return CustomActionResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN =
    CustomActionResult_Result_Result_MIN;
  static constexpr Result Result_MAX =
    CustomActionResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE =
    CustomActionResult_Result_Result_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Result_descriptor() {
    return CustomActionResult_Result_descriptor();
  }
  template<typename T>
  static inline const std::string& Result_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Result>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Result_Name.");
    return CustomActionResult_Result_Name(enum_t_value);
  }
  static inline bool Result_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Result* value) {
    return CustomActionResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str();
  const std::string& result_str() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_result_str(ArgT0&& arg0, ArgT... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* result_str);
  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(const std::string& value);
  std::string* _internal_mutable_result_str();
  public:

  // .mavsdk.rpc.custom_action.CustomActionResult.Result result = 1;
  void clear_result();
  ::mavsdk::rpc::custom_action::CustomActionResult_Result result() const;
  void set_result(::mavsdk::rpc::custom_action::CustomActionResult_Result value);
  private:
  ::mavsdk::rpc::custom_action::CustomActionResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::custom_action::CustomActionResult_Result value);
  public:

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.custom_action.CustomActionResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_str_;
  int result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_custom_5faction_2fcustom_5faction_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetCustomActionRequest

// .mavsdk.rpc.custom_action.ActionToExecute action_to_execute = 1;
inline bool SetCustomActionRequest::_internal_has_action_to_execute() const {
  return this != internal_default_instance() && action_to_execute_ != nullptr;
}
inline bool SetCustomActionRequest::has_action_to_execute() const {
  return _internal_has_action_to_execute();
}
inline void SetCustomActionRequest::clear_action_to_execute() {
  if (GetArenaForAllocation() == nullptr && action_to_execute_ != nullptr) {
    delete action_to_execute_;
  }
  action_to_execute_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& SetCustomActionRequest::_internal_action_to_execute() const {
  const ::mavsdk::rpc::custom_action::ActionToExecute* p = action_to_execute_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::ActionToExecute&>(
      ::mavsdk::rpc::custom_action::_ActionToExecute_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& SetCustomActionRequest::action_to_execute() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.SetCustomActionRequest.action_to_execute)
  return _internal_action_to_execute();
}
inline void SetCustomActionRequest::unsafe_arena_set_allocated_action_to_execute(
    ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(action_to_execute_);
  }
  action_to_execute_ = action_to_execute;
  if (action_to_execute) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.SetCustomActionRequest.action_to_execute)
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* SetCustomActionRequest::release_action_to_execute() {
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_to_execute_;
  action_to_execute_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* SetCustomActionRequest::unsafe_arena_release_action_to_execute() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.SetCustomActionRequest.action_to_execute)
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_to_execute_;
  action_to_execute_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* SetCustomActionRequest::_internal_mutable_action_to_execute() {
  
  if (action_to_execute_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionToExecute>(GetArenaForAllocation());
    action_to_execute_ = p;
  }
  return action_to_execute_;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* SetCustomActionRequest::mutable_action_to_execute() {
  ::mavsdk::rpc::custom_action::ActionToExecute* _msg = _internal_mutable_action_to_execute();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.SetCustomActionRequest.action_to_execute)
  return _msg;
}
inline void SetCustomActionRequest::set_allocated_action_to_execute(::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete action_to_execute_;
  }
  if (action_to_execute) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(action_to_execute);
    if (message_arena != submessage_arena) {
      action_to_execute = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action_to_execute, submessage_arena);
    }
    
  } else {
    
  }
  action_to_execute_ = action_to_execute;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.SetCustomActionRequest.action_to_execute)
}

// -------------------------------------------------------------------

// SetCustomActionResponse

// .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
inline bool SetCustomActionResponse::_internal_has_custom_action_result() const {
  return this != internal_default_instance() && custom_action_result_ != nullptr;
}
inline bool SetCustomActionResponse::has_custom_action_result() const {
  return _internal_has_custom_action_result();
}
inline void SetCustomActionResponse::clear_custom_action_result() {
  if (GetArenaForAllocation() == nullptr && custom_action_result_ != nullptr) {
    delete custom_action_result_;
  }
  custom_action_result_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& SetCustomActionResponse::_internal_custom_action_result() const {
  const ::mavsdk::rpc::custom_action::CustomActionResult* p = custom_action_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::CustomActionResult&>(
      ::mavsdk::rpc::custom_action::_CustomActionResult_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& SetCustomActionResponse::custom_action_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.SetCustomActionResponse.custom_action_result)
  return _internal_custom_action_result();
}
inline void SetCustomActionResponse::unsafe_arena_set_allocated_custom_action_result(
    ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(custom_action_result_);
  }
  custom_action_result_ = custom_action_result;
  if (custom_action_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.SetCustomActionResponse.custom_action_result)
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* SetCustomActionResponse::release_custom_action_result() {
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* SetCustomActionResponse::unsafe_arena_release_custom_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.SetCustomActionResponse.custom_action_result)
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* SetCustomActionResponse::_internal_mutable_custom_action_result() {
  
  if (custom_action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(GetArenaForAllocation());
    custom_action_result_ = p;
  }
  return custom_action_result_;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* SetCustomActionResponse::mutable_custom_action_result() {
  ::mavsdk::rpc::custom_action::CustomActionResult* _msg = _internal_mutable_custom_action_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.SetCustomActionResponse.custom_action_result)
  return _msg;
}
inline void SetCustomActionResponse::set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete custom_action_result_;
  }
  if (custom_action_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom_action_result);
    if (message_arena != submessage_arena) {
      custom_action_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_action_result, submessage_arena);
    }
    
  } else {
    
  }
  custom_action_result_ = custom_action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.SetCustomActionResponse.custom_action_result)
}

// -------------------------------------------------------------------

// SubscribeCustomActionRequest

// -------------------------------------------------------------------

// CustomActionResponse

// .mavsdk.rpc.custom_action.ActionToExecute action_to_execute = 1;
inline bool CustomActionResponse::_internal_has_action_to_execute() const {
  return this != internal_default_instance() && action_to_execute_ != nullptr;
}
inline bool CustomActionResponse::has_action_to_execute() const {
  return _internal_has_action_to_execute();
}
inline void CustomActionResponse::clear_action_to_execute() {
  if (GetArenaForAllocation() == nullptr && action_to_execute_ != nullptr) {
    delete action_to_execute_;
  }
  action_to_execute_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& CustomActionResponse::_internal_action_to_execute() const {
  const ::mavsdk::rpc::custom_action::ActionToExecute* p = action_to_execute_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::ActionToExecute&>(
      ::mavsdk::rpc::custom_action::_ActionToExecute_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& CustomActionResponse::action_to_execute() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionResponse.action_to_execute)
  return _internal_action_to_execute();
}
inline void CustomActionResponse::unsafe_arena_set_allocated_action_to_execute(
    ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(action_to_execute_);
  }
  action_to_execute_ = action_to_execute;
  if (action_to_execute) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.CustomActionResponse.action_to_execute)
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionResponse::release_action_to_execute() {
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_to_execute_;
  action_to_execute_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionResponse::unsafe_arena_release_action_to_execute() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.CustomActionResponse.action_to_execute)
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_to_execute_;
  action_to_execute_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionResponse::_internal_mutable_action_to_execute() {
  
  if (action_to_execute_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionToExecute>(GetArenaForAllocation());
    action_to_execute_ = p;
  }
  return action_to_execute_;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionResponse::mutable_action_to_execute() {
  ::mavsdk::rpc::custom_action::ActionToExecute* _msg = _internal_mutable_action_to_execute();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.CustomActionResponse.action_to_execute)
  return _msg;
}
inline void CustomActionResponse::set_allocated_action_to_execute(::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete action_to_execute_;
  }
  if (action_to_execute) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(action_to_execute);
    if (message_arena != submessage_arena) {
      action_to_execute = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action_to_execute, submessage_arena);
    }
    
  } else {
    
  }
  action_to_execute_ = action_to_execute;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.CustomActionResponse.action_to_execute)
}

// -------------------------------------------------------------------

// RespondCustomActionRequest

// .mavsdk.rpc.custom_action.ActionToExecute action_to_execute = 1;
inline bool RespondCustomActionRequest::_internal_has_action_to_execute() const {
  return this != internal_default_instance() && action_to_execute_ != nullptr;
}
inline bool RespondCustomActionRequest::has_action_to_execute() const {
  return _internal_has_action_to_execute();
}
inline void RespondCustomActionRequest::clear_action_to_execute() {
  if (GetArenaForAllocation() == nullptr && action_to_execute_ != nullptr) {
    delete action_to_execute_;
  }
  action_to_execute_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& RespondCustomActionRequest::_internal_action_to_execute() const {
  const ::mavsdk::rpc::custom_action::ActionToExecute* p = action_to_execute_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::ActionToExecute&>(
      ::mavsdk::rpc::custom_action::_ActionToExecute_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& RespondCustomActionRequest::action_to_execute() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.RespondCustomActionRequest.action_to_execute)
  return _internal_action_to_execute();
}
inline void RespondCustomActionRequest::unsafe_arena_set_allocated_action_to_execute(
    ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(action_to_execute_);
  }
  action_to_execute_ = action_to_execute;
  if (action_to_execute) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.RespondCustomActionRequest.action_to_execute)
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* RespondCustomActionRequest::release_action_to_execute() {
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_to_execute_;
  action_to_execute_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* RespondCustomActionRequest::unsafe_arena_release_action_to_execute() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.RespondCustomActionRequest.action_to_execute)
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_to_execute_;
  action_to_execute_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* RespondCustomActionRequest::_internal_mutable_action_to_execute() {
  
  if (action_to_execute_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionToExecute>(GetArenaForAllocation());
    action_to_execute_ = p;
  }
  return action_to_execute_;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* RespondCustomActionRequest::mutable_action_to_execute() {
  ::mavsdk::rpc::custom_action::ActionToExecute* _msg = _internal_mutable_action_to_execute();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.RespondCustomActionRequest.action_to_execute)
  return _msg;
}
inline void RespondCustomActionRequest::set_allocated_action_to_execute(::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete action_to_execute_;
  }
  if (action_to_execute) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(action_to_execute);
    if (message_arena != submessage_arena) {
      action_to_execute = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action_to_execute, submessage_arena);
    }
    
  } else {
    
  }
  action_to_execute_ = action_to_execute;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.RespondCustomActionRequest.action_to_execute)
}

// .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 2;
inline bool RespondCustomActionRequest::_internal_has_custom_action_result() const {
  return this != internal_default_instance() && custom_action_result_ != nullptr;
}
inline bool RespondCustomActionRequest::has_custom_action_result() const {
  return _internal_has_custom_action_result();
}
inline void RespondCustomActionRequest::clear_custom_action_result() {
  if (GetArenaForAllocation() == nullptr && custom_action_result_ != nullptr) {
    delete custom_action_result_;
  }
  custom_action_result_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& RespondCustomActionRequest::_internal_custom_action_result() const {
  const ::mavsdk::rpc::custom_action::CustomActionResult* p = custom_action_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::CustomActionResult&>(
      ::mavsdk::rpc::custom_action::_CustomActionResult_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& RespondCustomActionRequest::custom_action_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.RespondCustomActionRequest.custom_action_result)
  return _internal_custom_action_result();
}
inline void RespondCustomActionRequest::unsafe_arena_set_allocated_custom_action_result(
    ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(custom_action_result_);
  }
  custom_action_result_ = custom_action_result;
  if (custom_action_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.RespondCustomActionRequest.custom_action_result)
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionRequest::release_custom_action_result() {
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionRequest::unsafe_arena_release_custom_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.RespondCustomActionRequest.custom_action_result)
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionRequest::_internal_mutable_custom_action_result() {
  
  if (custom_action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(GetArenaForAllocation());
    custom_action_result_ = p;
  }
  return custom_action_result_;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionRequest::mutable_custom_action_result() {
  ::mavsdk::rpc::custom_action::CustomActionResult* _msg = _internal_mutable_custom_action_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.RespondCustomActionRequest.custom_action_result)
  return _msg;
}
inline void RespondCustomActionRequest::set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete custom_action_result_;
  }
  if (custom_action_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom_action_result);
    if (message_arena != submessage_arena) {
      custom_action_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_action_result, submessage_arena);
    }
    
  } else {
    
  }
  custom_action_result_ = custom_action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.RespondCustomActionRequest.custom_action_result)
}

// -------------------------------------------------------------------

// RespondCustomActionResponse

// .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
inline bool RespondCustomActionResponse::_internal_has_custom_action_result() const {
  return this != internal_default_instance() && custom_action_result_ != nullptr;
}
inline bool RespondCustomActionResponse::has_custom_action_result() const {
  return _internal_has_custom_action_result();
}
inline void RespondCustomActionResponse::clear_custom_action_result() {
  if (GetArenaForAllocation() == nullptr && custom_action_result_ != nullptr) {
    delete custom_action_result_;
  }
  custom_action_result_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& RespondCustomActionResponse::_internal_custom_action_result() const {
  const ::mavsdk::rpc::custom_action::CustomActionResult* p = custom_action_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::CustomActionResult&>(
      ::mavsdk::rpc::custom_action::_CustomActionResult_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& RespondCustomActionResponse::custom_action_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.RespondCustomActionResponse.custom_action_result)
  return _internal_custom_action_result();
}
inline void RespondCustomActionResponse::unsafe_arena_set_allocated_custom_action_result(
    ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(custom_action_result_);
  }
  custom_action_result_ = custom_action_result;
  if (custom_action_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.RespondCustomActionResponse.custom_action_result)
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionResponse::release_custom_action_result() {
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionResponse::unsafe_arena_release_custom_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.RespondCustomActionResponse.custom_action_result)
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionResponse::_internal_mutable_custom_action_result() {
  
  if (custom_action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(GetArenaForAllocation());
    custom_action_result_ = p;
  }
  return custom_action_result_;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* RespondCustomActionResponse::mutable_custom_action_result() {
  ::mavsdk::rpc::custom_action::CustomActionResult* _msg = _internal_mutable_custom_action_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.RespondCustomActionResponse.custom_action_result)
  return _msg;
}
inline void RespondCustomActionResponse::set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete custom_action_result_;
  }
  if (custom_action_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom_action_result);
    if (message_arena != submessage_arena) {
      custom_action_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_action_result, submessage_arena);
    }
    
  } else {
    
  }
  custom_action_result_ = custom_action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.RespondCustomActionResponse.custom_action_result)
}

// -------------------------------------------------------------------

// SubscribeCustomActionCancellationRequest

// -------------------------------------------------------------------

// CustomActionCancellationResponse

// bool cancel = 1;
inline void CustomActionCancellationResponse::clear_cancel() {
  cancel_ = false;
}
inline bool CustomActionCancellationResponse::_internal_cancel() const {
  return cancel_;
}
inline bool CustomActionCancellationResponse::cancel() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionCancellationResponse.cancel)
  return _internal_cancel();
}
inline void CustomActionCancellationResponse::_internal_set_cancel(bool value) {
  
  cancel_ = value;
}
inline void CustomActionCancellationResponse::set_cancel(bool value) {
  _internal_set_cancel(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.CustomActionCancellationResponse.cancel)
}

// -------------------------------------------------------------------

// CustomActionMetadataRequest

// .mavsdk.rpc.custom_action.ActionToExecute action_to_execute = 1;
inline bool CustomActionMetadataRequest::_internal_has_action_to_execute() const {
  return this != internal_default_instance() && action_to_execute_ != nullptr;
}
inline bool CustomActionMetadataRequest::has_action_to_execute() const {
  return _internal_has_action_to_execute();
}
inline void CustomActionMetadataRequest::clear_action_to_execute() {
  if (GetArenaForAllocation() == nullptr && action_to_execute_ != nullptr) {
    delete action_to_execute_;
  }
  action_to_execute_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& CustomActionMetadataRequest::_internal_action_to_execute() const {
  const ::mavsdk::rpc::custom_action::ActionToExecute* p = action_to_execute_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::ActionToExecute&>(
      ::mavsdk::rpc::custom_action::_ActionToExecute_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::ActionToExecute& CustomActionMetadataRequest::action_to_execute() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionMetadataRequest.action_to_execute)
  return _internal_action_to_execute();
}
inline void CustomActionMetadataRequest::unsafe_arena_set_allocated_action_to_execute(
    ::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(action_to_execute_);
  }
  action_to_execute_ = action_to_execute;
  if (action_to_execute) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.CustomActionMetadataRequest.action_to_execute)
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionMetadataRequest::release_action_to_execute() {
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_to_execute_;
  action_to_execute_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionMetadataRequest::unsafe_arena_release_action_to_execute() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.CustomActionMetadataRequest.action_to_execute)
  
  ::mavsdk::rpc::custom_action::ActionToExecute* temp = action_to_execute_;
  action_to_execute_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionMetadataRequest::_internal_mutable_action_to_execute() {
  
  if (action_to_execute_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionToExecute>(GetArenaForAllocation());
    action_to_execute_ = p;
  }
  return action_to_execute_;
}
inline ::mavsdk::rpc::custom_action::ActionToExecute* CustomActionMetadataRequest::mutable_action_to_execute() {
  ::mavsdk::rpc::custom_action::ActionToExecute* _msg = _internal_mutable_action_to_execute();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.CustomActionMetadataRequest.action_to_execute)
  return _msg;
}
inline void CustomActionMetadataRequest::set_allocated_action_to_execute(::mavsdk::rpc::custom_action::ActionToExecute* action_to_execute) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete action_to_execute_;
  }
  if (action_to_execute) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(action_to_execute);
    if (message_arena != submessage_arena) {
      action_to_execute = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action_to_execute, submessage_arena);
    }
    
  } else {
    
  }
  action_to_execute_ = action_to_execute;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.CustomActionMetadataRequest.action_to_execute)
}

// string file_path = 2;
inline void CustomActionMetadataRequest::clear_file_path() {
  file_path_.ClearToEmpty();
}
inline const std::string& CustomActionMetadataRequest::file_path() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionMetadataRequest.file_path)
  return _internal_file_path();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CustomActionMetadataRequest::set_file_path(ArgT0&& arg0, ArgT... args) {
 
 file_path_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.CustomActionMetadataRequest.file_path)
}
inline std::string* CustomActionMetadataRequest::mutable_file_path() {
  std::string* _s = _internal_mutable_file_path();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.CustomActionMetadataRequest.file_path)
  return _s;
}
inline const std::string& CustomActionMetadataRequest::_internal_file_path() const {
  return file_path_.Get();
}
inline void CustomActionMetadataRequest::_internal_set_file_path(const std::string& value) {
  
  file_path_.Set(value, GetArenaForAllocation());
}
inline std::string* CustomActionMetadataRequest::_internal_mutable_file_path() {
  
  return file_path_.Mutable(GetArenaForAllocation());
}
inline std::string* CustomActionMetadataRequest::release_file_path() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.CustomActionMetadataRequest.file_path)
  return file_path_.Release();
}
inline void CustomActionMetadataRequest::set_allocated_file_path(std::string* file_path) {
  if (file_path != nullptr) {
    
  } else {
    
  }
  file_path_.SetAllocated(file_path, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (file_path_.IsDefault()) {
    file_path_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.CustomActionMetadataRequest.file_path)
}

// -------------------------------------------------------------------

// CustomActionMetadataResponse

// .mavsdk.rpc.custom_action.ActionMetadata action_metadata = 1;
inline bool CustomActionMetadataResponse::_internal_has_action_metadata() const {
  return this != internal_default_instance() && action_metadata_ != nullptr;
}
inline bool CustomActionMetadataResponse::has_action_metadata() const {
  return _internal_has_action_metadata();
}
inline void CustomActionMetadataResponse::clear_action_metadata() {
  if (GetArenaForAllocation() == nullptr && action_metadata_ != nullptr) {
    delete action_metadata_;
  }
  action_metadata_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::ActionMetadata& CustomActionMetadataResponse::_internal_action_metadata() const {
  const ::mavsdk::rpc::custom_action::ActionMetadata* p = action_metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::ActionMetadata&>(
      ::mavsdk::rpc::custom_action::_ActionMetadata_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::ActionMetadata& CustomActionMetadataResponse::action_metadata() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionMetadataResponse.action_metadata)
  return _internal_action_metadata();
}
inline void CustomActionMetadataResponse::unsafe_arena_set_allocated_action_metadata(
    ::mavsdk::rpc::custom_action::ActionMetadata* action_metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(action_metadata_);
  }
  action_metadata_ = action_metadata;
  if (action_metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.CustomActionMetadataResponse.action_metadata)
}
inline ::mavsdk::rpc::custom_action::ActionMetadata* CustomActionMetadataResponse::release_action_metadata() {
  
  ::mavsdk::rpc::custom_action::ActionMetadata* temp = action_metadata_;
  action_metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionMetadata* CustomActionMetadataResponse::unsafe_arena_release_action_metadata() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.CustomActionMetadataResponse.action_metadata)
  
  ::mavsdk::rpc::custom_action::ActionMetadata* temp = action_metadata_;
  action_metadata_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::ActionMetadata* CustomActionMetadataResponse::_internal_mutable_action_metadata() {
  
  if (action_metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::ActionMetadata>(GetArenaForAllocation());
    action_metadata_ = p;
  }
  return action_metadata_;
}
inline ::mavsdk::rpc::custom_action::ActionMetadata* CustomActionMetadataResponse::mutable_action_metadata() {
  ::mavsdk::rpc::custom_action::ActionMetadata* _msg = _internal_mutable_action_metadata();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.CustomActionMetadataResponse.action_metadata)
  return _msg;
}
inline void CustomActionMetadataResponse::set_allocated_action_metadata(::mavsdk::rpc::custom_action::ActionMetadata* action_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete action_metadata_;
  }
  if (action_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(action_metadata);
    if (message_arena != submessage_arena) {
      action_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action_metadata, submessage_arena);
    }
    
  } else {
    
  }
  action_metadata_ = action_metadata;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.CustomActionMetadataResponse.action_metadata)
}

// .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 2;
inline bool CustomActionMetadataResponse::_internal_has_custom_action_result() const {
  return this != internal_default_instance() && custom_action_result_ != nullptr;
}
inline bool CustomActionMetadataResponse::has_custom_action_result() const {
  return _internal_has_custom_action_result();
}
inline void CustomActionMetadataResponse::clear_custom_action_result() {
  if (GetArenaForAllocation() == nullptr && custom_action_result_ != nullptr) {
    delete custom_action_result_;
  }
  custom_action_result_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& CustomActionMetadataResponse::_internal_custom_action_result() const {
  const ::mavsdk::rpc::custom_action::CustomActionResult* p = custom_action_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::CustomActionResult&>(
      ::mavsdk::rpc::custom_action::_CustomActionResult_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& CustomActionMetadataResponse::custom_action_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionMetadataResponse.custom_action_result)
  return _internal_custom_action_result();
}
inline void CustomActionMetadataResponse::unsafe_arena_set_allocated_custom_action_result(
    ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(custom_action_result_);
  }
  custom_action_result_ = custom_action_result;
  if (custom_action_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.CustomActionMetadataResponse.custom_action_result)
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* CustomActionMetadataResponse::release_custom_action_result() {
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* CustomActionMetadataResponse::unsafe_arena_release_custom_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.CustomActionMetadataResponse.custom_action_result)
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* CustomActionMetadataResponse::_internal_mutable_custom_action_result() {
  
  if (custom_action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(GetArenaForAllocation());
    custom_action_result_ = p;
  }
  return custom_action_result_;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* CustomActionMetadataResponse::mutable_custom_action_result() {
  ::mavsdk::rpc::custom_action::CustomActionResult* _msg = _internal_mutable_custom_action_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.CustomActionMetadataResponse.custom_action_result)
  return _msg;
}
inline void CustomActionMetadataResponse::set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete custom_action_result_;
  }
  if (custom_action_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom_action_result);
    if (message_arena != submessage_arena) {
      custom_action_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_action_result, submessage_arena);
    }
    
  } else {
    
  }
  custom_action_result_ = custom_action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.CustomActionMetadataResponse.custom_action_result)
}

// -------------------------------------------------------------------

// ExecuteCustomActionStageRequest

// .mavsdk.rpc.custom_action.Stage stage = 1;
inline bool ExecuteCustomActionStageRequest::_internal_has_stage() const {
  return this != internal_default_instance() && stage_ != nullptr;
}
inline bool ExecuteCustomActionStageRequest::has_stage() const {
  return _internal_has_stage();
}
inline void ExecuteCustomActionStageRequest::clear_stage() {
  if (GetArenaForAllocation() == nullptr && stage_ != nullptr) {
    delete stage_;
  }
  stage_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::Stage& ExecuteCustomActionStageRequest::_internal_stage() const {
  const ::mavsdk::rpc::custom_action::Stage* p = stage_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::Stage&>(
      ::mavsdk::rpc::custom_action::_Stage_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::Stage& ExecuteCustomActionStageRequest::stage() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ExecuteCustomActionStageRequest.stage)
  return _internal_stage();
}
inline void ExecuteCustomActionStageRequest::unsafe_arena_set_allocated_stage(
    ::mavsdk::rpc::custom_action::Stage* stage) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stage_);
  }
  stage_ = stage;
  if (stage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.ExecuteCustomActionStageRequest.stage)
}
inline ::mavsdk::rpc::custom_action::Stage* ExecuteCustomActionStageRequest::release_stage() {
  
  ::mavsdk::rpc::custom_action::Stage* temp = stage_;
  stage_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::Stage* ExecuteCustomActionStageRequest::unsafe_arena_release_stage() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.ExecuteCustomActionStageRequest.stage)
  
  ::mavsdk::rpc::custom_action::Stage* temp = stage_;
  stage_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::Stage* ExecuteCustomActionStageRequest::_internal_mutable_stage() {
  
  if (stage_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::Stage>(GetArenaForAllocation());
    stage_ = p;
  }
  return stage_;
}
inline ::mavsdk::rpc::custom_action::Stage* ExecuteCustomActionStageRequest::mutable_stage() {
  ::mavsdk::rpc::custom_action::Stage* _msg = _internal_mutable_stage();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.ExecuteCustomActionStageRequest.stage)
  return _msg;
}
inline void ExecuteCustomActionStageRequest::set_allocated_stage(::mavsdk::rpc::custom_action::Stage* stage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete stage_;
  }
  if (stage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(stage);
    if (message_arena != submessage_arena) {
      stage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stage, submessage_arena);
    }
    
  } else {
    
  }
  stage_ = stage;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.ExecuteCustomActionStageRequest.stage)
}

// -------------------------------------------------------------------

// ExecuteCustomActionStageResponse

// .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
inline bool ExecuteCustomActionStageResponse::_internal_has_custom_action_result() const {
  return this != internal_default_instance() && custom_action_result_ != nullptr;
}
inline bool ExecuteCustomActionStageResponse::has_custom_action_result() const {
  return _internal_has_custom_action_result();
}
inline void ExecuteCustomActionStageResponse::clear_custom_action_result() {
  if (GetArenaForAllocation() == nullptr && custom_action_result_ != nullptr) {
    delete custom_action_result_;
  }
  custom_action_result_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& ExecuteCustomActionStageResponse::_internal_custom_action_result() const {
  const ::mavsdk::rpc::custom_action::CustomActionResult* p = custom_action_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::CustomActionResult&>(
      ::mavsdk::rpc::custom_action::_CustomActionResult_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& ExecuteCustomActionStageResponse::custom_action_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ExecuteCustomActionStageResponse.custom_action_result)
  return _internal_custom_action_result();
}
inline void ExecuteCustomActionStageResponse::unsafe_arena_set_allocated_custom_action_result(
    ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(custom_action_result_);
  }
  custom_action_result_ = custom_action_result;
  if (custom_action_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.ExecuteCustomActionStageResponse.custom_action_result)
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* ExecuteCustomActionStageResponse::release_custom_action_result() {
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* ExecuteCustomActionStageResponse::unsafe_arena_release_custom_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.ExecuteCustomActionStageResponse.custom_action_result)
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* ExecuteCustomActionStageResponse::_internal_mutable_custom_action_result() {
  
  if (custom_action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(GetArenaForAllocation());
    custom_action_result_ = p;
  }
  return custom_action_result_;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* ExecuteCustomActionStageResponse::mutable_custom_action_result() {
  ::mavsdk::rpc::custom_action::CustomActionResult* _msg = _internal_mutable_custom_action_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.ExecuteCustomActionStageResponse.custom_action_result)
  return _msg;
}
inline void ExecuteCustomActionStageResponse::set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete custom_action_result_;
  }
  if (custom_action_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom_action_result);
    if (message_arena != submessage_arena) {
      custom_action_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_action_result, submessage_arena);
    }
    
  } else {
    
  }
  custom_action_result_ = custom_action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.ExecuteCustomActionStageResponse.custom_action_result)
}

// -------------------------------------------------------------------

// ExecuteCustomActionGlobalScriptRequest

// string global_script = 1;
inline void ExecuteCustomActionGlobalScriptRequest::clear_global_script() {
  global_script_.ClearToEmpty();
}
inline const std::string& ExecuteCustomActionGlobalScriptRequest::global_script() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptRequest.global_script)
  return _internal_global_script();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ExecuteCustomActionGlobalScriptRequest::set_global_script(ArgT0&& arg0, ArgT... args) {
 
 global_script_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptRequest.global_script)
}
inline std::string* ExecuteCustomActionGlobalScriptRequest::mutable_global_script() {
  std::string* _s = _internal_mutable_global_script();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptRequest.global_script)
  return _s;
}
inline const std::string& ExecuteCustomActionGlobalScriptRequest::_internal_global_script() const {
  return global_script_.Get();
}
inline void ExecuteCustomActionGlobalScriptRequest::_internal_set_global_script(const std::string& value) {
  
  global_script_.Set(value, GetArenaForAllocation());
}
inline std::string* ExecuteCustomActionGlobalScriptRequest::_internal_mutable_global_script() {
  
  return global_script_.Mutable(GetArenaForAllocation());
}
inline std::string* ExecuteCustomActionGlobalScriptRequest::release_global_script() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptRequest.global_script)
  return global_script_.Release();
}
inline void ExecuteCustomActionGlobalScriptRequest::set_allocated_global_script(std::string* global_script) {
  if (global_script != nullptr) {
    
  } else {
    
  }
  global_script_.SetAllocated(global_script, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (global_script_.IsDefault()) {
    global_script_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptRequest.global_script)
}

// -------------------------------------------------------------------

// ExecuteCustomActionGlobalScriptResponse

// .mavsdk.rpc.custom_action.CustomActionResult custom_action_result = 1;
inline bool ExecuteCustomActionGlobalScriptResponse::_internal_has_custom_action_result() const {
  return this != internal_default_instance() && custom_action_result_ != nullptr;
}
inline bool ExecuteCustomActionGlobalScriptResponse::has_custom_action_result() const {
  return _internal_has_custom_action_result();
}
inline void ExecuteCustomActionGlobalScriptResponse::clear_custom_action_result() {
  if (GetArenaForAllocation() == nullptr && custom_action_result_ != nullptr) {
    delete custom_action_result_;
  }
  custom_action_result_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& ExecuteCustomActionGlobalScriptResponse::_internal_custom_action_result() const {
  const ::mavsdk::rpc::custom_action::CustomActionResult* p = custom_action_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::CustomActionResult&>(
      ::mavsdk::rpc::custom_action::_CustomActionResult_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::CustomActionResult& ExecuteCustomActionGlobalScriptResponse::custom_action_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptResponse.custom_action_result)
  return _internal_custom_action_result();
}
inline void ExecuteCustomActionGlobalScriptResponse::unsafe_arena_set_allocated_custom_action_result(
    ::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(custom_action_result_);
  }
  custom_action_result_ = custom_action_result;
  if (custom_action_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptResponse.custom_action_result)
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* ExecuteCustomActionGlobalScriptResponse::release_custom_action_result() {
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* ExecuteCustomActionGlobalScriptResponse::unsafe_arena_release_custom_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptResponse.custom_action_result)
  
  ::mavsdk::rpc::custom_action::CustomActionResult* temp = custom_action_result_;
  custom_action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* ExecuteCustomActionGlobalScriptResponse::_internal_mutable_custom_action_result() {
  
  if (custom_action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::CustomActionResult>(GetArenaForAllocation());
    custom_action_result_ = p;
  }
  return custom_action_result_;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult* ExecuteCustomActionGlobalScriptResponse::mutable_custom_action_result() {
  ::mavsdk::rpc::custom_action::CustomActionResult* _msg = _internal_mutable_custom_action_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptResponse.custom_action_result)
  return _msg;
}
inline void ExecuteCustomActionGlobalScriptResponse::set_allocated_custom_action_result(::mavsdk::rpc::custom_action::CustomActionResult* custom_action_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete custom_action_result_;
  }
  if (custom_action_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom_action_result);
    if (message_arena != submessage_arena) {
      custom_action_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_action_result, submessage_arena);
    }
    
  } else {
    
  }
  custom_action_result_ = custom_action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.ExecuteCustomActionGlobalScriptResponse.custom_action_result)
}

// -------------------------------------------------------------------

// ActionToExecute

// uint32 id = 1;
inline void ActionToExecute::clear_id() {
  id_ = 0u;
}
inline uint32_t ActionToExecute::_internal_id() const {
  return id_;
}
inline uint32_t ActionToExecute::id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionToExecute.id)
  return _internal_id();
}
inline void ActionToExecute::_internal_set_id(uint32_t value) {
  
  id_ = value;
}
inline void ActionToExecute::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionToExecute.id)
}

// double timeout = 2;
inline void ActionToExecute::clear_timeout() {
  timeout_ = 0;
}
inline double ActionToExecute::_internal_timeout() const {
  return timeout_;
}
inline double ActionToExecute::timeout() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionToExecute.timeout)
  return _internal_timeout();
}
inline void ActionToExecute::_internal_set_timeout(double value) {
  
  timeout_ = value;
}
inline void ActionToExecute::set_timeout(double value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionToExecute.timeout)
}

// double progress = 3;
inline void ActionToExecute::clear_progress() {
  progress_ = 0;
}
inline double ActionToExecute::_internal_progress() const {
  return progress_;
}
inline double ActionToExecute::progress() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionToExecute.progress)
  return _internal_progress();
}
inline void ActionToExecute::_internal_set_progress(double value) {
  
  progress_ = value;
}
inline void ActionToExecute::set_progress(double value) {
  _internal_set_progress(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionToExecute.progress)
}

// -------------------------------------------------------------------

// Command

// .mavsdk.rpc.custom_action.Command.CommandType type = 1;
inline void Command::clear_type() {
  type_ = 0;
}
inline ::mavsdk::rpc::custom_action::Command_CommandType Command::_internal_type() const {
  return static_cast< ::mavsdk::rpc::custom_action::Command_CommandType >(type_);
}
inline ::mavsdk::rpc::custom_action::Command_CommandType Command::type() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.type)
  return _internal_type();
}
inline void Command::_internal_set_type(::mavsdk::rpc::custom_action::Command_CommandType value) {
  
  type_ = value;
}
inline void Command::set_type(::mavsdk::rpc::custom_action::Command_CommandType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.type)
}

// uint32 target_system_id = 2;
inline void Command::clear_target_system_id() {
  target_system_id_ = 0u;
}
inline uint32_t Command::_internal_target_system_id() const {
  return target_system_id_;
}
inline uint32_t Command::target_system_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.target_system_id)
  return _internal_target_system_id();
}
inline void Command::_internal_set_target_system_id(uint32_t value) {
  
  target_system_id_ = value;
}
inline void Command::set_target_system_id(uint32_t value) {
  _internal_set_target_system_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.target_system_id)
}

// uint32 target_component_id = 3;
inline void Command::clear_target_component_id() {
  target_component_id_ = 0u;
}
inline uint32_t Command::_internal_target_component_id() const {
  return target_component_id_;
}
inline uint32_t Command::target_component_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.target_component_id)
  return _internal_target_component_id();
}
inline void Command::_internal_set_target_component_id(uint32_t value) {
  
  target_component_id_ = value;
}
inline void Command::set_target_component_id(uint32_t value) {
  _internal_set_target_component_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.target_component_id)
}

// uint32 frame = 4;
inline void Command::clear_frame() {
  frame_ = 0u;
}
inline uint32_t Command::_internal_frame() const {
  return frame_;
}
inline uint32_t Command::frame() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.frame)
  return _internal_frame();
}
inline void Command::_internal_set_frame(uint32_t value) {
  
  frame_ = value;
}
inline void Command::set_frame(uint32_t value) {
  _internal_set_frame(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.frame)
}

// uint32 command = 5;
inline void Command::clear_command() {
  command_ = 0u;
}
inline uint32_t Command::_internal_command() const {
  return command_;
}
inline uint32_t Command::command() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.command)
  return _internal_command();
}
inline void Command::_internal_set_command(uint32_t value) {
  
  command_ = value;
}
inline void Command::set_command(uint32_t value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.command)
}

// double param1 = 6;
inline void Command::clear_param1() {
  param1_ = 0;
}
inline double Command::_internal_param1() const {
  return param1_;
}
inline double Command::param1() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.param1)
  return _internal_param1();
}
inline void Command::_internal_set_param1(double value) {
  
  param1_ = value;
}
inline void Command::set_param1(double value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.param1)
}

// double param2 = 7;
inline void Command::clear_param2() {
  param2_ = 0;
}
inline double Command::_internal_param2() const {
  return param2_;
}
inline double Command::param2() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.param2)
  return _internal_param2();
}
inline void Command::_internal_set_param2(double value) {
  
  param2_ = value;
}
inline void Command::set_param2(double value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.param2)
}

// double param3 = 8;
inline void Command::clear_param3() {
  param3_ = 0;
}
inline double Command::_internal_param3() const {
  return param3_;
}
inline double Command::param3() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.param3)
  return _internal_param3();
}
inline void Command::_internal_set_param3(double value) {
  
  param3_ = value;
}
inline void Command::set_param3(double value) {
  _internal_set_param3(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.param3)
}

// double param4 = 9;
inline void Command::clear_param4() {
  param4_ = 0;
}
inline double Command::_internal_param4() const {
  return param4_;
}
inline double Command::param4() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.param4)
  return _internal_param4();
}
inline void Command::_internal_set_param4(double value) {
  
  param4_ = value;
}
inline void Command::set_param4(double value) {
  _internal_set_param4(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.param4)
}

// double param5 = 10;
inline void Command::clear_param5() {
  param5_ = 0;
}
inline double Command::_internal_param5() const {
  return param5_;
}
inline double Command::param5() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.param5)
  return _internal_param5();
}
inline void Command::_internal_set_param5(double value) {
  
  param5_ = value;
}
inline void Command::set_param5(double value) {
  _internal_set_param5(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.param5)
}

// double param6 = 11;
inline void Command::clear_param6() {
  param6_ = 0;
}
inline double Command::_internal_param6() const {
  return param6_;
}
inline double Command::param6() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.param6)
  return _internal_param6();
}
inline void Command::_internal_set_param6(double value) {
  
  param6_ = value;
}
inline void Command::set_param6(double value) {
  _internal_set_param6(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.param6)
}

// double param7 = 12;
inline void Command::clear_param7() {
  param7_ = 0;
}
inline double Command::_internal_param7() const {
  return param7_;
}
inline double Command::param7() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.param7)
  return _internal_param7();
}
inline void Command::_internal_set_param7(double value) {
  
  param7_ = value;
}
inline void Command::set_param7(double value) {
  _internal_set_param7(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.param7)
}

// bool is_local = 13;
inline void Command::clear_is_local() {
  is_local_ = false;
}
inline bool Command::_internal_is_local() const {
  return is_local_;
}
inline bool Command::is_local() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Command.is_local)
  return _internal_is_local();
}
inline void Command::_internal_set_is_local(bool value) {
  
  is_local_ = value;
}
inline void Command::set_is_local(bool value) {
  _internal_set_is_local(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Command.is_local)
}

// -------------------------------------------------------------------

// Parameter

// .mavsdk.rpc.custom_action.Parameter.ParameterType type = 1;
inline void Parameter::clear_type() {
  type_ = 0;
}
inline ::mavsdk::rpc::custom_action::Parameter_ParameterType Parameter::_internal_type() const {
  return static_cast< ::mavsdk::rpc::custom_action::Parameter_ParameterType >(type_);
}
inline ::mavsdk::rpc::custom_action::Parameter_ParameterType Parameter::type() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Parameter.type)
  return _internal_type();
}
inline void Parameter::_internal_set_type(::mavsdk::rpc::custom_action::Parameter_ParameterType value) {
  
  type_ = value;
}
inline void Parameter::set_type(::mavsdk::rpc::custom_action::Parameter_ParameterType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Parameter.type)
}

// string name = 2;
inline void Parameter::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Parameter::name() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Parameter.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Parameter::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Parameter.name)
}
inline std::string* Parameter::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.Parameter.name)
  return _s;
}
inline const std::string& Parameter::_internal_name() const {
  return name_.Get();
}
inline void Parameter::_internal_set_name(const std::string& value) {
  
  name_.Set(value, GetArenaForAllocation());
}
inline std::string* Parameter::_internal_mutable_name() {
  
  return name_.Mutable(GetArenaForAllocation());
}
inline std::string* Parameter::release_name() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.Parameter.name)
  return name_.Release();
}
inline void Parameter::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault()) {
    name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.Parameter.name)
}

// float value = 3;
inline void Parameter::clear_value() {
  value_ = 0;
}
inline float Parameter::_internal_value() const {
  return value_;
}
inline float Parameter::value() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Parameter.value)
  return _internal_value();
}
inline void Parameter::_internal_set_value(float value) {
  
  value_ = value;
}
inline void Parameter::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Parameter.value)
}

// -------------------------------------------------------------------

// Stage

// .mavsdk.rpc.custom_action.Command command = 1;
inline bool Stage::_internal_has_command() const {
  return this != internal_default_instance() && command_ != nullptr;
}
inline bool Stage::has_command() const {
  return _internal_has_command();
}
inline void Stage::clear_command() {
  if (GetArenaForAllocation() == nullptr && command_ != nullptr) {
    delete command_;
  }
  command_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::Command& Stage::_internal_command() const {
  const ::mavsdk::rpc::custom_action::Command* p = command_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::Command&>(
      ::mavsdk::rpc::custom_action::_Command_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::Command& Stage::command() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Stage.command)
  return _internal_command();
}
inline void Stage::unsafe_arena_set_allocated_command(
    ::mavsdk::rpc::custom_action::Command* command) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(command_);
  }
  command_ = command;
  if (command) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.Stage.command)
}
inline ::mavsdk::rpc::custom_action::Command* Stage::release_command() {
  
  ::mavsdk::rpc::custom_action::Command* temp = command_;
  command_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::Command* Stage::unsafe_arena_release_command() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.Stage.command)
  
  ::mavsdk::rpc::custom_action::Command* temp = command_;
  command_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::Command* Stage::_internal_mutable_command() {
  
  if (command_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::Command>(GetArenaForAllocation());
    command_ = p;
  }
  return command_;
}
inline ::mavsdk::rpc::custom_action::Command* Stage::mutable_command() {
  ::mavsdk::rpc::custom_action::Command* _msg = _internal_mutable_command();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.Stage.command)
  return _msg;
}
inline void Stage::set_allocated_command(::mavsdk::rpc::custom_action::Command* command) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete command_;
  }
  if (command) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(command);
    if (message_arena != submessage_arena) {
      command = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, command, submessage_arena);
    }
    
  } else {
    
  }
  command_ = command;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.Stage.command)
}

// string script = 2;
inline void Stage::clear_script() {
  script_.ClearToEmpty();
}
inline const std::string& Stage::script() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Stage.script)
  return _internal_script();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Stage::set_script(ArgT0&& arg0, ArgT... args) {
 
 script_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Stage.script)
}
inline std::string* Stage::mutable_script() {
  std::string* _s = _internal_mutable_script();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.Stage.script)
  return _s;
}
inline const std::string& Stage::_internal_script() const {
  return script_.Get();
}
inline void Stage::_internal_set_script(const std::string& value) {
  
  script_.Set(value, GetArenaForAllocation());
}
inline std::string* Stage::_internal_mutable_script() {
  
  return script_.Mutable(GetArenaForAllocation());
}
inline std::string* Stage::release_script() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.Stage.script)
  return script_.Release();
}
inline void Stage::set_allocated_script(std::string* script) {
  if (script != nullptr) {
    
  } else {
    
  }
  script_.SetAllocated(script, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (script_.IsDefault()) {
    script_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.Stage.script)
}

// .mavsdk.rpc.custom_action.Parameter parameter_set = 3;
inline bool Stage::_internal_has_parameter_set() const {
  return this != internal_default_instance() && parameter_set_ != nullptr;
}
inline bool Stage::has_parameter_set() const {
  return _internal_has_parameter_set();
}
inline void Stage::clear_parameter_set() {
  if (GetArenaForAllocation() == nullptr && parameter_set_ != nullptr) {
    delete parameter_set_;
  }
  parameter_set_ = nullptr;
}
inline const ::mavsdk::rpc::custom_action::Parameter& Stage::_internal_parameter_set() const {
  const ::mavsdk::rpc::custom_action::Parameter* p = parameter_set_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::custom_action::Parameter&>(
      ::mavsdk::rpc::custom_action::_Parameter_default_instance_);
}
inline const ::mavsdk::rpc::custom_action::Parameter& Stage::parameter_set() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Stage.parameter_set)
  return _internal_parameter_set();
}
inline void Stage::unsafe_arena_set_allocated_parameter_set(
    ::mavsdk::rpc::custom_action::Parameter* parameter_set) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(parameter_set_);
  }
  parameter_set_ = parameter_set;
  if (parameter_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.custom_action.Stage.parameter_set)
}
inline ::mavsdk::rpc::custom_action::Parameter* Stage::release_parameter_set() {
  
  ::mavsdk::rpc::custom_action::Parameter* temp = parameter_set_;
  parameter_set_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::mavsdk::rpc::custom_action::Parameter* Stage::unsafe_arena_release_parameter_set() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.Stage.parameter_set)
  
  ::mavsdk::rpc::custom_action::Parameter* temp = parameter_set_;
  parameter_set_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::custom_action::Parameter* Stage::_internal_mutable_parameter_set() {
  
  if (parameter_set_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::custom_action::Parameter>(GetArenaForAllocation());
    parameter_set_ = p;
  }
  return parameter_set_;
}
inline ::mavsdk::rpc::custom_action::Parameter* Stage::mutable_parameter_set() {
  ::mavsdk::rpc::custom_action::Parameter* _msg = _internal_mutable_parameter_set();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.Stage.parameter_set)
  return _msg;
}
inline void Stage::set_allocated_parameter_set(::mavsdk::rpc::custom_action::Parameter* parameter_set) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete parameter_set_;
  }
  if (parameter_set) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(parameter_set);
    if (message_arena != submessage_arena) {
      parameter_set = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parameter_set, submessage_arena);
    }
    
  } else {
    
  }
  parameter_set_ = parameter_set;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.Stage.parameter_set)
}

// .mavsdk.rpc.custom_action.Stage.StateTransitionCondition state_transition_condition = 4;
inline void Stage::clear_state_transition_condition() {
  state_transition_condition_ = 0;
}
inline ::mavsdk::rpc::custom_action::Stage_StateTransitionCondition Stage::_internal_state_transition_condition() const {
  return static_cast< ::mavsdk::rpc::custom_action::Stage_StateTransitionCondition >(state_transition_condition_);
}
inline ::mavsdk::rpc::custom_action::Stage_StateTransitionCondition Stage::state_transition_condition() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Stage.state_transition_condition)
  return _internal_state_transition_condition();
}
inline void Stage::_internal_set_state_transition_condition(::mavsdk::rpc::custom_action::Stage_StateTransitionCondition value) {
  
  state_transition_condition_ = value;
}
inline void Stage::set_state_transition_condition(::mavsdk::rpc::custom_action::Stage_StateTransitionCondition value) {
  _internal_set_state_transition_condition(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Stage.state_transition_condition)
}

// double timeout = 5;
inline void Stage::clear_timeout() {
  timeout_ = 0;
}
inline double Stage::_internal_timeout() const {
  return timeout_;
}
inline double Stage::timeout() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.Stage.timeout)
  return _internal_timeout();
}
inline void Stage::_internal_set_timeout(double value) {
  
  timeout_ = value;
}
inline void Stage::set_timeout(double value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.Stage.timeout)
}

// -------------------------------------------------------------------

// ActionMetadata

// uint32 id = 1;
inline void ActionMetadata::clear_id() {
  id_ = 0u;
}
inline uint32_t ActionMetadata::_internal_id() const {
  return id_;
}
inline uint32_t ActionMetadata::id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionMetadata.id)
  return _internal_id();
}
inline void ActionMetadata::_internal_set_id(uint32_t value) {
  
  id_ = value;
}
inline void ActionMetadata::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionMetadata.id)
}

// string action_name = 2;
inline void ActionMetadata::clear_action_name() {
  action_name_.ClearToEmpty();
}
inline const std::string& ActionMetadata::action_name() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionMetadata.action_name)
  return _internal_action_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ActionMetadata::set_action_name(ArgT0&& arg0, ArgT... args) {
 
 action_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionMetadata.action_name)
}
inline std::string* ActionMetadata::mutable_action_name() {
  std::string* _s = _internal_mutable_action_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.ActionMetadata.action_name)
  return _s;
}
inline const std::string& ActionMetadata::_internal_action_name() const {
  return action_name_.Get();
}
inline void ActionMetadata::_internal_set_action_name(const std::string& value) {
  
  action_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ActionMetadata::_internal_mutable_action_name() {
  
  return action_name_.Mutable(GetArenaForAllocation());
}
inline std::string* ActionMetadata::release_action_name() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.ActionMetadata.action_name)
  return action_name_.Release();
}
inline void ActionMetadata::set_allocated_action_name(std::string* action_name) {
  if (action_name != nullptr) {
    
  } else {
    
  }
  action_name_.SetAllocated(action_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (action_name_.IsDefault()) {
    action_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.ActionMetadata.action_name)
}

// string action_description = 3;
inline void ActionMetadata::clear_action_description() {
  action_description_.ClearToEmpty();
}
inline const std::string& ActionMetadata::action_description() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionMetadata.action_description)
  return _internal_action_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ActionMetadata::set_action_description(ArgT0&& arg0, ArgT... args) {
 
 action_description_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionMetadata.action_description)
}
inline std::string* ActionMetadata::mutable_action_description() {
  std::string* _s = _internal_mutable_action_description();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.ActionMetadata.action_description)
  return _s;
}
inline const std::string& ActionMetadata::_internal_action_description() const {
  return action_description_.Get();
}
inline void ActionMetadata::_internal_set_action_description(const std::string& value) {
  
  action_description_.Set(value, GetArenaForAllocation());
}
inline std::string* ActionMetadata::_internal_mutable_action_description() {
  
  return action_description_.Mutable(GetArenaForAllocation());
}
inline std::string* ActionMetadata::release_action_description() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.ActionMetadata.action_description)
  return action_description_.Release();
}
inline void ActionMetadata::set_allocated_action_description(std::string* action_description) {
  if (action_description != nullptr) {
    
  } else {
    
  }
  action_description_.SetAllocated(action_description, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (action_description_.IsDefault()) {
    action_description_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.ActionMetadata.action_description)
}

// string global_script = 4;
inline void ActionMetadata::clear_global_script() {
  global_script_.ClearToEmpty();
}
inline const std::string& ActionMetadata::global_script() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionMetadata.global_script)
  return _internal_global_script();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ActionMetadata::set_global_script(ArgT0&& arg0, ArgT... args) {
 
 global_script_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionMetadata.global_script)
}
inline std::string* ActionMetadata::mutable_global_script() {
  std::string* _s = _internal_mutable_global_script();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.ActionMetadata.global_script)
  return _s;
}
inline const std::string& ActionMetadata::_internal_global_script() const {
  return global_script_.Get();
}
inline void ActionMetadata::_internal_set_global_script(const std::string& value) {
  
  global_script_.Set(value, GetArenaForAllocation());
}
inline std::string* ActionMetadata::_internal_mutable_global_script() {
  
  return global_script_.Mutable(GetArenaForAllocation());
}
inline std::string* ActionMetadata::release_global_script() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.ActionMetadata.global_script)
  return global_script_.Release();
}
inline void ActionMetadata::set_allocated_global_script(std::string* global_script) {
  if (global_script != nullptr) {
    
  } else {
    
  }
  global_script_.SetAllocated(global_script, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (global_script_.IsDefault()) {
    global_script_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.ActionMetadata.global_script)
}

// double global_timeout = 5;
inline void ActionMetadata::clear_global_timeout() {
  global_timeout_ = 0;
}
inline double ActionMetadata::_internal_global_timeout() const {
  return global_timeout_;
}
inline double ActionMetadata::global_timeout() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionMetadata.global_timeout)
  return _internal_global_timeout();
}
inline void ActionMetadata::_internal_set_global_timeout(double value) {
  
  global_timeout_ = value;
}
inline void ActionMetadata::set_global_timeout(double value) {
  _internal_set_global_timeout(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionMetadata.global_timeout)
}

// .mavsdk.rpc.custom_action.ActionMetadata.ActionCompleteCondition action_complete_condition = 6;
inline void ActionMetadata::clear_action_complete_condition() {
  action_complete_condition_ = 0;
}
inline ::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition ActionMetadata::_internal_action_complete_condition() const {
  return static_cast< ::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition >(action_complete_condition_);
}
inline ::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition ActionMetadata::action_complete_condition() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionMetadata.action_complete_condition)
  return _internal_action_complete_condition();
}
inline void ActionMetadata::_internal_set_action_complete_condition(::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition value) {
  
  action_complete_condition_ = value;
}
inline void ActionMetadata::set_action_complete_condition(::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition value) {
  _internal_set_action_complete_condition(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.ActionMetadata.action_complete_condition)
}

// repeated .mavsdk.rpc.custom_action.Stage stages = 7;
inline int ActionMetadata::_internal_stages_size() const {
  return stages_.size();
}
inline int ActionMetadata::stages_size() const {
  return _internal_stages_size();
}
inline void ActionMetadata::clear_stages() {
  stages_.Clear();
}
inline ::mavsdk::rpc::custom_action::Stage* ActionMetadata::mutable_stages(int index) {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.ActionMetadata.stages)
  return stages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::custom_action::Stage >*
ActionMetadata::mutable_stages() {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.custom_action.ActionMetadata.stages)
  return &stages_;
}
inline const ::mavsdk::rpc::custom_action::Stage& ActionMetadata::_internal_stages(int index) const {
  return stages_.Get(index);
}
inline const ::mavsdk::rpc::custom_action::Stage& ActionMetadata::stages(int index) const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.ActionMetadata.stages)
  return _internal_stages(index);
}
inline ::mavsdk::rpc::custom_action::Stage* ActionMetadata::_internal_add_stages() {
  return stages_.Add();
}
inline ::mavsdk::rpc::custom_action::Stage* ActionMetadata::add_stages() {
  ::mavsdk::rpc::custom_action::Stage* _add = _internal_add_stages();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.custom_action.ActionMetadata.stages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mavsdk::rpc::custom_action::Stage >&
ActionMetadata::stages() const {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.custom_action.ActionMetadata.stages)
  return stages_;
}

// -------------------------------------------------------------------

// CustomActionResult

// .mavsdk.rpc.custom_action.CustomActionResult.Result result = 1;
inline void CustomActionResult::clear_result() {
  result_ = 0;
}
inline ::mavsdk::rpc::custom_action::CustomActionResult_Result CustomActionResult::_internal_result() const {
  return static_cast< ::mavsdk::rpc::custom_action::CustomActionResult_Result >(result_);
}
inline ::mavsdk::rpc::custom_action::CustomActionResult_Result CustomActionResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionResult.result)
  return _internal_result();
}
inline void CustomActionResult::_internal_set_result(::mavsdk::rpc::custom_action::CustomActionResult_Result value) {
  
  result_ = value;
}
inline void CustomActionResult::set_result(::mavsdk::rpc::custom_action::CustomActionResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.CustomActionResult.result)
}

// string result_str = 2;
inline void CustomActionResult::clear_result_str() {
  result_str_.ClearToEmpty();
}
inline const std::string& CustomActionResult::result_str() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.custom_action.CustomActionResult.result_str)
  return _internal_result_str();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CustomActionResult::set_result_str(ArgT0&& arg0, ArgT... args) {
 
 result_str_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.custom_action.CustomActionResult.result_str)
}
inline std::string* CustomActionResult::mutable_result_str() {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.custom_action.CustomActionResult.result_str)
  return _s;
}
inline const std::string& CustomActionResult::_internal_result_str() const {
  return result_str_.Get();
}
inline void CustomActionResult::_internal_set_result_str(const std::string& value) {
  
  result_str_.Set(value, GetArenaForAllocation());
}
inline std::string* CustomActionResult::_internal_mutable_result_str() {
  
  return result_str_.Mutable(GetArenaForAllocation());
}
inline std::string* CustomActionResult::release_result_str() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.custom_action.CustomActionResult.result_str)
  return result_str_.Release();
}
inline void CustomActionResult::set_allocated_result_str(std::string* result_str) {
  if (result_str != nullptr) {
    
  } else {
    
  }
  result_str_.SetAllocated(result_str, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (result_str_.IsDefault()) {
    result_str_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.custom_action.CustomActionResult.result_str)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace custom_action
}  // namespace rpc
}  // namespace mavsdk

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::mavsdk::rpc::custom_action::Command_CommandType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::custom_action::Command_CommandType>() {
  return ::mavsdk::rpc::custom_action::Command_CommandType_descriptor();
}
template <> struct is_proto_enum< ::mavsdk::rpc::custom_action::Parameter_ParameterType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::custom_action::Parameter_ParameterType>() {
  return ::mavsdk::rpc::custom_action::Parameter_ParameterType_descriptor();
}
template <> struct is_proto_enum< ::mavsdk::rpc::custom_action::Stage_StateTransitionCondition> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::custom_action::Stage_StateTransitionCondition>() {
  return ::mavsdk::rpc::custom_action::Stage_StateTransitionCondition_descriptor();
}
template <> struct is_proto_enum< ::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition>() {
  return ::mavsdk::rpc::custom_action::ActionMetadata_ActionCompleteCondition_descriptor();
}
template <> struct is_proto_enum< ::mavsdk::rpc::custom_action::CustomActionResult_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::custom_action::CustomActionResult_Result>() {
  return ::mavsdk::rpc::custom_action::CustomActionResult_Result_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_custom_5faction_2fcustom_5faction_2eproto
