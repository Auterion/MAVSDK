// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: tracking_server/tracking_server.proto
#ifndef GRPC_tracking_5fserver_2ftracking_5fserver_2eproto__INCLUDED
#define GRPC_tracking_5fserver_2ftracking_5fserver_2eproto__INCLUDED

#include "tracking_server/tracking_server.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace mavsdk {
namespace rpc {
namespace tracking_server {

// API for an onboard image tracking software.
class TrackingServerService final {
 public:
  static constexpr char const* service_full_name() {
    return "mavsdk.rpc.tracking_server.TrackingServerService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Set/update the current point tracking status.
    virtual ::grpc::Status SetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>> AsyncSetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>>(AsyncSetTrackingPointStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>> PrepareAsyncSetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>>(PrepareAsyncSetTrackingPointStatusRaw(context, request, cq));
    }
    // Set/update the current rectangle tracking status.
    virtual ::grpc::Status SetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>> AsyncSetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>>(AsyncSetTrackingRectangleStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>> PrepareAsyncSetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>>(PrepareAsyncSetTrackingRectangleStatusRaw(context, request, cq));
    }
    // Set the current tracking status to off.
    virtual ::grpc::Status SetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>> AsyncSetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>>(AsyncSetTrackingOffStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>> PrepareAsyncSetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>>(PrepareAsyncSetTrackingOffStatusRaw(context, request, cq));
    }
    // Subscribe to incoming tracking point command.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>> SubscribeTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>>(SubscribeTrackingPointCommandRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>> AsyncSubscribeTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>>(AsyncSubscribeTrackingPointCommandRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>> PrepareAsyncSubscribeTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>>(PrepareAsyncSubscribeTrackingPointCommandRaw(context, request, cq));
    }
    // Subscribe to incoming tracking rectangle command.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>> SubscribeTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>>(SubscribeTrackingRectangleCommandRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>> AsyncSubscribeTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>>(AsyncSubscribeTrackingRectangleCommandRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>> PrepareAsyncSubscribeTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>>(PrepareAsyncSubscribeTrackingRectangleCommandRaw(context, request, cq));
    }
    // Subscribe to incoming tracking off command.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>> SubscribeTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>>(SubscribeTrackingOffCommandRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>> AsyncSubscribeTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>>(AsyncSubscribeTrackingOffCommandRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>> PrepareAsyncSubscribeTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>>(PrepareAsyncSubscribeTrackingOffCommandRaw(context, request, cq));
    }
    // Respond to an incoming tracking point command.
    virtual ::grpc::Status RespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>> AsyncRespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>>(AsyncRespondTrackingPointCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>> PrepareAsyncRespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>>(PrepareAsyncRespondTrackingPointCommandRaw(context, request, cq));
    }
    // Respond to an incoming tracking rectangle command.
    virtual ::grpc::Status RespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>> AsyncRespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>>(AsyncRespondTrackingRectangleCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>> PrepareAsyncRespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>>(PrepareAsyncRespondTrackingRectangleCommandRaw(context, request, cq));
    }
    // Respond to an incoming tracking off command.
    virtual ::grpc::Status RespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>> AsyncRespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>>(AsyncRespondTrackingOffCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>> PrepareAsyncRespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>>(PrepareAsyncRespondTrackingOffCommandRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Set/update the current point tracking status.
      virtual void SetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set/update the current rectangle tracking status.
      virtual void SetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Set the current tracking status to off.
      virtual void SetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Subscribe to incoming tracking point command.
      virtual void SubscribeTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* reactor) = 0;
      // Subscribe to incoming tracking rectangle command.
      virtual void SubscribeTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* reactor) = 0;
      // Subscribe to incoming tracking off command.
      virtual void SubscribeTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* reactor) = 0;
      // Respond to an incoming tracking point command.
      virtual void RespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Respond to an incoming tracking rectangle command.
      virtual void RespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Respond to an incoming tracking off command.
      virtual void RespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>* AsyncSetTrackingPointStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>* PrepareAsyncSetTrackingPointStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>* AsyncSetTrackingRectangleStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>* PrepareAsyncSetTrackingRectangleStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>* AsyncSetTrackingOffStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>* PrepareAsyncSetTrackingOffStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* SubscribeTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* AsyncSubscribeTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* PrepareAsyncSubscribeTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* SubscribeTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* AsyncSubscribeTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* PrepareAsyncSubscribeTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* SubscribeTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* AsyncSubscribeTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* PrepareAsyncSubscribeTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>* AsyncRespondTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>* PrepareAsyncRespondTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>* AsyncRespondTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>* PrepareAsyncRespondTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>* AsyncRespondTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>* PrepareAsyncRespondTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>> AsyncSetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>>(AsyncSetTrackingPointStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>> PrepareAsyncSetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>>(PrepareAsyncSetTrackingPointStatusRaw(context, request, cq));
    }
    ::grpc::Status SetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>> AsyncSetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>>(AsyncSetTrackingRectangleStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>> PrepareAsyncSetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>>(PrepareAsyncSetTrackingRectangleStatusRaw(context, request, cq));
    }
    ::grpc::Status SetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>> AsyncSetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>>(AsyncSetTrackingOffStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>> PrepareAsyncSetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>>(PrepareAsyncSetTrackingOffStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>> SubscribeTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>>(SubscribeTrackingPointCommandRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>> AsyncSubscribeTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>>(AsyncSubscribeTrackingPointCommandRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>> PrepareAsyncSubscribeTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>>(PrepareAsyncSubscribeTrackingPointCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>> SubscribeTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>>(SubscribeTrackingRectangleCommandRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>> AsyncSubscribeTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>>(AsyncSubscribeTrackingRectangleCommandRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>> PrepareAsyncSubscribeTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>>(PrepareAsyncSubscribeTrackingRectangleCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>> SubscribeTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>>(SubscribeTrackingOffCommandRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>> AsyncSubscribeTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>>(AsyncSubscribeTrackingOffCommandRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>> PrepareAsyncSubscribeTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>>(PrepareAsyncSubscribeTrackingOffCommandRaw(context, request, cq));
    }
    ::grpc::Status RespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>> AsyncRespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>>(AsyncRespondTrackingPointCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>> PrepareAsyncRespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>>(PrepareAsyncRespondTrackingPointCommandRaw(context, request, cq));
    }
    ::grpc::Status RespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>> AsyncRespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>>(AsyncRespondTrackingRectangleCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>> PrepareAsyncRespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>>(PrepareAsyncRespondTrackingRectangleCommandRaw(context, request, cq));
    }
    ::grpc::Status RespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>> AsyncRespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>>(AsyncRespondTrackingOffCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>> PrepareAsyncRespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>>(PrepareAsyncRespondTrackingOffCommandRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* response, std::function<void(::grpc::Status)>) override;
      void SetTrackingPointStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* response, std::function<void(::grpc::Status)>) override;
      void SetTrackingRectangleStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* response, std::function<void(::grpc::Status)>) override;
      void SetTrackingOffStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SubscribeTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* reactor) override;
      void SubscribeTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* reactor) override;
      void SubscribeTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* reactor) override;
      void RespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* response, std::function<void(::grpc::Status)>) override;
      void RespondTrackingPointCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* response, std::function<void(::grpc::Status)>) override;
      void RespondTrackingRectangleCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* response, std::function<void(::grpc::Status)>) override;
      void RespondTrackingOffCommand(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>* AsyncSetTrackingPointStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>* PrepareAsyncSetTrackingPointStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>* AsyncSetTrackingRectangleStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>* PrepareAsyncSetTrackingRectangleStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>* AsyncSetTrackingOffStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>* PrepareAsyncSetTrackingOffStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* SubscribeTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* AsyncSubscribeTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* PrepareAsyncSubscribeTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* SubscribeTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* AsyncSubscribeTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* PrepareAsyncSubscribeTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* SubscribeTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* AsyncSubscribeTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* PrepareAsyncSubscribeTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>* AsyncRespondTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>* PrepareAsyncRespondTrackingPointCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>* AsyncRespondTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>* PrepareAsyncRespondTrackingRectangleCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>* AsyncRespondTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>* PrepareAsyncRespondTrackingOffCommandRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SetTrackingPointStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_SetTrackingRectangleStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_SetTrackingOffStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeTrackingPointCommand_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeTrackingRectangleCommand_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeTrackingOffCommand_;
    const ::grpc::internal::RpcMethod rpcmethod_RespondTrackingPointCommand_;
    const ::grpc::internal::RpcMethod rpcmethod_RespondTrackingRectangleCommand_;
    const ::grpc::internal::RpcMethod rpcmethod_RespondTrackingOffCommand_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Set/update the current point tracking status.
    virtual ::grpc::Status SetTrackingPointStatus(::grpc::ServerContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* response);
    // Set/update the current rectangle tracking status.
    virtual ::grpc::Status SetTrackingRectangleStatus(::grpc::ServerContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* response);
    // Set the current tracking status to off.
    virtual ::grpc::Status SetTrackingOffStatus(::grpc::ServerContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* response);
    // Subscribe to incoming tracking point command.
    virtual ::grpc::Status SubscribeTrackingPointCommand(::grpc::ServerContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* writer);
    // Subscribe to incoming tracking rectangle command.
    virtual ::grpc::Status SubscribeTrackingRectangleCommand(::grpc::ServerContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* writer);
    // Subscribe to incoming tracking off command.
    virtual ::grpc::Status SubscribeTrackingOffCommand(::grpc::ServerContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* writer);
    // Respond to an incoming tracking point command.
    virtual ::grpc::Status RespondTrackingPointCommand(::grpc::ServerContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* response);
    // Respond to an incoming tracking rectangle command.
    virtual ::grpc::Status RespondTrackingRectangleCommand(::grpc::ServerContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* response);
    // Respond to an incoming tracking off command.
    virtual ::grpc::Status RespondTrackingOffCommand(::grpc::ServerContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SetTrackingPointStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetTrackingPointStatus() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SetTrackingPointStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingPointStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTrackingPointStatus(::grpc::ServerContext* context, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetTrackingRectangleStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetTrackingRectangleStatus() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SetTrackingRectangleStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingRectangleStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTrackingRectangleStatus(::grpc::ServerContext* context, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetTrackingOffStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetTrackingOffStatus() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SetTrackingOffStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingOffStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTrackingOffStatus(::grpc::ServerContext* context, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeTrackingPointCommand() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SubscribeTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeTrackingPointCommand(::grpc::ServerContext* context, ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SubscribeTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeTrackingRectangleCommand(::grpc::ServerContext* context, ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeTrackingOffCommand() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SubscribeTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeTrackingOffCommand(::grpc::ServerContext* context, ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespondTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespondTrackingPointCommand() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_RespondTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespondTrackingPointCommand(::grpc::ServerContext* context, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespondTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespondTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_RespondTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespondTrackingRectangleCommand(::grpc::ServerContext* context, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RespondTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RespondTrackingOffCommand() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_RespondTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespondTrackingOffCommand(::grpc::ServerContext* context, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SetTrackingPointStatus<WithAsyncMethod_SetTrackingRectangleStatus<WithAsyncMethod_SetTrackingOffStatus<WithAsyncMethod_SubscribeTrackingPointCommand<WithAsyncMethod_SubscribeTrackingRectangleCommand<WithAsyncMethod_SubscribeTrackingOffCommand<WithAsyncMethod_RespondTrackingPointCommand<WithAsyncMethod_RespondTrackingRectangleCommand<WithAsyncMethod_RespondTrackingOffCommand<Service > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SetTrackingPointStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetTrackingPointStatus() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* response) { return this->SetTrackingPointStatus(context, request, response); }));}
    void SetMessageAllocatorFor_SetTrackingPointStatus(
        ::grpc::MessageAllocator< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetTrackingPointStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingPointStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetTrackingPointStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetTrackingRectangleStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetTrackingRectangleStatus() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* response) { return this->SetTrackingRectangleStatus(context, request, response); }));}
    void SetMessageAllocatorFor_SetTrackingRectangleStatus(
        ::grpc::MessageAllocator< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetTrackingRectangleStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingRectangleStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetTrackingRectangleStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetTrackingOffStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetTrackingOffStatus() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* request, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* response) { return this->SetTrackingOffStatus(context, request, response); }));}
    void SetMessageAllocatorFor_SetTrackingOffStatus(
        ::grpc::MessageAllocator< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetTrackingOffStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingOffStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetTrackingOffStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeTrackingPointCommand() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest, ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* request) { return this->SubscribeTrackingPointCommand(context, request); }));
    }
    ~WithCallbackMethod_SubscribeTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* SubscribeTrackingPointCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest, ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* request) { return this->SubscribeTrackingRectangleCommand(context, request); }));
    }
    ~WithCallbackMethod_SubscribeTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* SubscribeTrackingRectangleCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeTrackingOffCommand() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest, ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* request) { return this->SubscribeTrackingOffCommand(context, request); }));
    }
    ~WithCallbackMethod_SubscribeTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* SubscribeTrackingOffCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespondTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespondTrackingPointCommand() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* response) { return this->RespondTrackingPointCommand(context, request, response); }));}
    void SetMessageAllocatorFor_RespondTrackingPointCommand(
        ::grpc::MessageAllocator< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespondTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespondTrackingPointCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespondTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespondTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* response) { return this->RespondTrackingRectangleCommand(context, request, response); }));}
    void SetMessageAllocatorFor_RespondTrackingRectangleCommand(
        ::grpc::MessageAllocator< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespondTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespondTrackingRectangleCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RespondTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RespondTrackingOffCommand() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* request, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* response) { return this->RespondTrackingOffCommand(context, request, response); }));}
    void SetMessageAllocatorFor_RespondTrackingOffCommand(
        ::grpc::MessageAllocator< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RespondTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespondTrackingOffCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SetTrackingPointStatus<WithCallbackMethod_SetTrackingRectangleStatus<WithCallbackMethod_SetTrackingOffStatus<WithCallbackMethod_SubscribeTrackingPointCommand<WithCallbackMethod_SubscribeTrackingRectangleCommand<WithCallbackMethod_SubscribeTrackingOffCommand<WithCallbackMethod_RespondTrackingPointCommand<WithCallbackMethod_RespondTrackingRectangleCommand<WithCallbackMethod_RespondTrackingOffCommand<Service > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SetTrackingPointStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetTrackingPointStatus() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SetTrackingPointStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingPointStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetTrackingRectangleStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetTrackingRectangleStatus() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SetTrackingRectangleStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingRectangleStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetTrackingOffStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetTrackingOffStatus() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SetTrackingOffStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingOffStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeTrackingPointCommand() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SubscribeTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SubscribeTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeTrackingOffCommand() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SubscribeTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespondTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespondTrackingPointCommand() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_RespondTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespondTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespondTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_RespondTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RespondTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RespondTrackingOffCommand() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_RespondTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetTrackingPointStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetTrackingPointStatus() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SetTrackingPointStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingPointStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTrackingPointStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetTrackingRectangleStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetTrackingRectangleStatus() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SetTrackingRectangleStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingRectangleStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTrackingRectangleStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetTrackingOffStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetTrackingOffStatus() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SetTrackingOffStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingOffStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTrackingOffStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeTrackingPointCommand() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SubscribeTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeTrackingPointCommand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SubscribeTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeTrackingRectangleCommand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeTrackingOffCommand() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SubscribeTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeTrackingOffCommand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespondTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespondTrackingPointCommand() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_RespondTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespondTrackingPointCommand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespondTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespondTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_RespondTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespondTrackingRectangleCommand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RespondTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RespondTrackingOffCommand() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_RespondTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRespondTrackingOffCommand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetTrackingPointStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetTrackingPointStatus() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetTrackingPointStatus(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetTrackingPointStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingPointStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetTrackingPointStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetTrackingRectangleStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetTrackingRectangleStatus() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetTrackingRectangleStatus(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetTrackingRectangleStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingRectangleStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetTrackingRectangleStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetTrackingOffStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetTrackingOffStatus() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetTrackingOffStatus(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetTrackingOffStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTrackingOffStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetTrackingOffStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeTrackingPointCommand() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeTrackingPointCommand(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeTrackingPointCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeTrackingRectangleCommand(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeTrackingRectangleCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeTrackingOffCommand() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeTrackingOffCommand(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeTrackingOffCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespondTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespondTrackingPointCommand() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespondTrackingPointCommand(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespondTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespondTrackingPointCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespondTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespondTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespondTrackingRectangleCommand(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespondTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespondTrackingRectangleCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RespondTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RespondTrackingOffCommand() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RespondTrackingOffCommand(context, request, response); }));
    }
    ~WithRawCallbackMethod_RespondTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RespondTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RespondTrackingOffCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetTrackingPointStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetTrackingPointStatus() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>* streamer) {
                       return this->StreamedSetTrackingPointStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetTrackingPointStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetTrackingPointStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetTrackingPointStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::tracking_server::SetTrackingPointStatusRequest,::mavsdk::rpc::tracking_server::SetTrackingPointStatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetTrackingRectangleStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetTrackingRectangleStatus() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>* streamer) {
                       return this->StreamedSetTrackingRectangleStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetTrackingRectangleStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetTrackingRectangleStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetTrackingRectangleStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusRequest,::mavsdk::rpc::tracking_server::SetTrackingRectangleStatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetTrackingOffStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetTrackingOffStatus() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>* streamer) {
                       return this->StreamedSetTrackingOffStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetTrackingOffStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetTrackingOffStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest* /*request*/, ::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetTrackingOffStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::tracking_server::SetTrackingOffStatusRequest,::mavsdk::rpc::tracking_server::SetTrackingOffStatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespondTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespondTrackingPointCommand() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>* streamer) {
                       return this->StreamedRespondTrackingPointCommand(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespondTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespondTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespondTrackingPointCommand(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::tracking_server::RespondTrackingPointCommandRequest,::mavsdk::rpc::tracking_server::RespondTrackingPointCommandResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespondTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespondTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>* streamer) {
                       return this->StreamedRespondTrackingRectangleCommand(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespondTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespondTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespondTrackingRectangleCommand(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandRequest,::mavsdk::rpc::tracking_server::RespondTrackingRectangleCommandResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RespondTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RespondTrackingOffCommand() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>* streamer) {
                       return this->StreamedRespondTrackingOffCommand(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RespondTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RespondTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest* /*request*/, ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRespondTrackingOffCommand(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::tracking_server::RespondTrackingOffCommandRequest,::mavsdk::rpc::tracking_server::RespondTrackingOffCommandResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SetTrackingPointStatus<WithStreamedUnaryMethod_SetTrackingRectangleStatus<WithStreamedUnaryMethod_SetTrackingOffStatus<WithStreamedUnaryMethod_RespondTrackingPointCommand<WithStreamedUnaryMethod_RespondTrackingRectangleCommand<WithStreamedUnaryMethod_RespondTrackingOffCommand<Service > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeTrackingPointCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeTrackingPointCommand() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest, ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest, ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* streamer) {
                       return this->StreamedSubscribeTrackingPointCommand(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeTrackingPointCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeTrackingPointCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeTrackingPointCommand(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::tracking_server::SubscribeTrackingPointCommandRequest,::mavsdk::rpc::tracking_server::TrackingPointCommandResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeTrackingRectangleCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeTrackingRectangleCommand() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest, ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest, ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* streamer) {
                       return this->StreamedSubscribeTrackingRectangleCommand(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeTrackingRectangleCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeTrackingRectangleCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeTrackingRectangleCommand(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::tracking_server::SubscribeTrackingRectangleCommandRequest,::mavsdk::rpc::tracking_server::TrackingRectangleCommandResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeTrackingOffCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeTrackingOffCommand() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest, ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest, ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* streamer) {
                       return this->StreamedSubscribeTrackingOffCommand(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeTrackingOffCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeTrackingOffCommand(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeTrackingOffCommand(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::tracking_server::SubscribeTrackingOffCommandRequest,::mavsdk::rpc::tracking_server::TrackingOffCommandResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_SubscribeTrackingPointCommand<WithSplitStreamingMethod_SubscribeTrackingRectangleCommand<WithSplitStreamingMethod_SubscribeTrackingOffCommand<Service > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_SetTrackingPointStatus<WithStreamedUnaryMethod_SetTrackingRectangleStatus<WithStreamedUnaryMethod_SetTrackingOffStatus<WithSplitStreamingMethod_SubscribeTrackingPointCommand<WithSplitStreamingMethod_SubscribeTrackingRectangleCommand<WithSplitStreamingMethod_SubscribeTrackingOffCommand<WithStreamedUnaryMethod_RespondTrackingPointCommand<WithStreamedUnaryMethod_RespondTrackingRectangleCommand<WithStreamedUnaryMethod_RespondTrackingOffCommand<Service > > > > > > > > > StreamedService;
};

}  // namespace tracking_server
}  // namespace rpc
}  // namespace mavsdk


#endif  // GRPC_tracking_5fserver_2ftracking_5fserver_2eproto__INCLUDED
