// WARNING: THIS FILE IS AUTOGENERATED! As such, it should not be edited.
// Edits need to be made to templates/grpc_server.h.j2
#pragma once

#include <grpcpp/server.h>
#include <grpcpp/server_builder.h>

#ifdef ENABLE_PROTO_REFLECTION
#include <grpcpp/ext/proto_server_reflection_plugin.h>
#endif

#include <memory>

#include "mavsdk.h"
#include "core/core_service_impl.h"
{% for plugin in plugins %}
#ifdef {{ plugin|upper }}_ENABLED
#include "plugins/{{ plugin }}/{{ plugin }}.h"
#include "{{ plugin }}/{{ plugin }}_service_impl.h"
#endif
{% endfor %}

namespace mavsdk {
namespace mavsdk_server {

class GrpcServer {
public:
    GrpcServer(Mavsdk& mavsdk) :
        _core(mavsdk),
{% for plugin in plugins %}
#ifdef {{ plugin|upper }}_ENABLED
    _{{ plugin }}_lazy_plugin(mavsdk),
    _{{ plugin }}_service(_{{ plugin }}_lazy_plugin){{ "," if not loop.last }}
#endif
{% endfor %}
    {}

    int run();
    void wait();
    void stop();
    void set_port(int port);

private:
    void setup_port(grpc::ServerBuilder& builder);

    CoreServiceImpl<> _core;
{% for plugin in plugins %}
#ifdef {{ plugin|upper }}_ENABLED
{% if plugin.endswith("_server") %}
    LazyServerPlugin<{{ plugin|snake_case_to_pascal_case }}> _{{ plugin }}_lazy_plugin;
{% else %}
    LazyPlugin<{{ plugin|snake_case_to_pascal_case }}> _{{ plugin }}_lazy_plugin;
{% endif %}
    {{ plugin|snake_case_to_pascal_case }}ServiceImpl<> _{{ plugin }}_service;
#endif
{% endfor %}

    std::unique_ptr<grpc::Server> _server;

    int _port{0};
    int _bound_port{0};
};

} // namespace mavsdk_server
} // namespace mavsdk

